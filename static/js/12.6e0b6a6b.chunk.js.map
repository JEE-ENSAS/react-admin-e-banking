{"version":3,"sources":["helpers/BtnPlus.js","views/cards/CardsList.js"],"names":["BtnPlus","pathname","label","status","to","color","className","prototype","PropTypes","string","isRequired","defaultProps","columns","key","_style","width","filter","sorter","_props","CardList","cardState","useSelector","state","history","useHistory","dispatch","useDispatch","cards","setCards","useState","cardsNotAccepted","details","setDetails","useEffect","items","itemsPerPage","columnFilter","columnSorter","pagination","clickableRows","tableProps","striped","hover","scopedColumns","enabled","item","show_details","variant","shape","size","onClick","index","position","indexOf","newDetails","slice","splice","toggleDetails","id","includes","visible","cardHolderName","dateExpiration","updateCardHandler","card","type","DETAILS_CARD","payload","push","Swal","fire","title","showCancelButton","confirmButtonText","then","result","isConfirmed","action","enableOrDisableCardAction","enableCardOrDisable"],"mappings":"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","file":"static/js/12.6e0b6a6b.chunk.js","sourcesContent":["import React from \"react\";\nimport { CButton } from \"@coreui/react\";\nimport PropTypes from \"prop-types\"; \nimport { Link } from \"react-router-dom\";\n\nfunction BtnPlus({ pathname, label, status }) {\n  return (\n    <>\n      {pathname && (\n        <Link to={pathname}>\n          <CButton color={status}>\n            <i className=\"fa fa-plus mx-1\"></i>\n            {label}\n          </CButton>\n        </Link>\n      )}\n    </>\n  );\n}\n\nBtnPlus.prototype = {\n  pathname: PropTypes.string.isRequired,\n  label: PropTypes.string,\n};\n\nBtnPlus.defaultProps = {\n    status: \"primary\",\n}\n\nexport default BtnPlus;\n","import React, { useEffect, useState } from \"react\";\nimport { CSmartTable } from \"@coreui/react-pro\";\nimport { CCollapse, CButton,  CCardBody } from \"@coreui/react\";\nimport { useHistory } from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\nimport BtnPlus from \"../../helpers/BtnPlus\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { DETAILS_CARD } from \"src/actions/types\";\nimport { enableOrDisableCardAction } from \"../../actions/cardActions\";\n\nconst columns = [\n  { key: \"cardNumber\" },\n  { key: \"csv\" },\n  { key: \"dateExpiration\", _style: { width: \"40%\" } },\n  { key: \"type\", _style: { width: \"20%\" } },\n  { key: \"enabled\" },\n  {\n    key: \"show_details\",\n    label: \"\",\n    _style: { width: \"1%\" },\n    filter: false,\n    sorter: false,\n    _props: { color: \"\", className: \"fw-semibold\" },\n  },\n];\n\nfunction CardList() {\n  const cardState = useSelector((state) => state[\"cardReducer\"]);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const [cards, setCards] = useState(cardState.cardsNotAccepted);\n  const [details, setDetails] = useState([]);\n\n  useEffect(() => {\n    setCards([...cardState.cardsNotAccepted]);\n  }, [cardState.cardsNotAccepted]);\n\n  const toggleDetails = (index) => {\n    const position = details.indexOf(index);\n    let newDetails = details.slice();\n    if (position !== -1) {\n      newDetails.splice(position, 1);\n    } else {\n      newDetails = [...details, index];\n    }\n    setDetails(newDetails);\n  };\n\n  const updateCardHandler = (card) => {\n    dispatch({ type: DETAILS_CARD, payload: card });\n    history.push({\n      pathname: \"/editCard\",\n      id: card.id,\n    });\n  };\n\n  const enableCardOrDisable = (card) => {\n    const { id, enabled } = card;\n    Swal.fire({\n      title:\n        \"Do you want to \" + (enabled ? \"disable\" : \"enable\") + \" this card?\",\n      showCancelButton: true,\n      confirmButtonText: enabled ? \"Disable\" : \"Enable\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        const action = enabled ? \"disable\" : \"enable\";\n        dispatch(enableOrDisableCardAction({ id, action }));\n      }\n    });\n  };\n\n  const deleteCard = (index) => {\n    Swal.fire({\n      title: \"Do you want to delete this card?\",\n      showCancelButton: true,\n      confirmButtonText: \"Delete\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        // enabledCard(index);\n      }\n    });\n  };\n  return (\n    <>\n      <div className=\"d-flex justify-content-between align-items-center \">\n        <h3>Cards List</h3>\n        <BtnPlus pathname=\"/card\" label=\"New Card\" />\n      </div>\n      <CSmartTable\n        columns={columns}\n        items={cards}\n        itemsPerPage={8}\n        columnFilter\n        columnSorter\n        pagination\n        clickableRows\n        tableProps={{\n          striped: true,\n          hover: true,\n        }}\n        scopedColumns={{\n          enabled: (item) =>{\n            \n            return(\n            \n            \n            \n            <td>\n              {item.enabled ? \"Active\" : \"Not Active\"}\n            </td>\n            \n          )},\n\n          show_details: (item) => {\n            return (\n              <td className=\"py-2\">\n                <CButton\n                  color=\"primary\"\n                  variant=\"outline\"\n                  shape=\"square\"\n                  size=\"sm\"\n                  onClick={() => toggleDetails(item.id)}\n                >\n                  {details.includes(item.id) ? \"Hide\" : \"Action\"}\n                </CButton>\n              </td>\n            );\n          },\n          details: (item) => {\n            return (\n              <CCollapse visible={details.includes(item.id)}>\n                <CCardBody>\n                  <h5>{item.cardHolderName}</h5>\n                  <p className=\"text-muted\">Use since: {item.dateExpiration}</p>\n                  <CButton\n                    size=\"sm\"\n                    className=\"mx-1\"\n                    color=\"info\"\n                    onClick={() => updateCardHandler(item)}\n                  >\n                    Update\n                  </CButton>\n\n                  <CButton\n                    size=\"sm\"\n                    className=\"mx-1\"\n                    color={item.enabled ? \"warning\" : \"success\"}\n                    onClick={() => enableCardOrDisable(item)}\n                  >\n                    {item.enabled ? \"disable\" : \"enable\"}\n                  </CButton>\n\n                  <CButton\n                    size=\"sm\"\n                    className=\"mx-1\"\n                    color=\"danger\"\n                    onClick={() => deleteCard(item.id)}\n                  >\n                    Delete\n                  </CButton>\n                </CCardBody>\n              </CCollapse>\n            );\n          },\n        }}\n      />\n    </>\n  );\n}\n\nexport default CardList;\n"],"sourceRoot":""}
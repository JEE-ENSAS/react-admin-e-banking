{"version":3,"sources":["services/index.js","http-common.js","services/auth.service.js","helpers/SweetAlert.js","actions/authAction.js","services/card.service.js","actions/cardActions.js","services/account.service.js","actions/accountAction.js","views/transfer/ModalComptes.js","views/users/ModalTransferFromUser.js","views/users/UserList.js","views/transfer/Step0.js","helpers/EmptyData.js","views/transfer/NextStepFooter.js","views/transfer/Step1.js","views/transfer/Step2.js","services/TransferService.js","actions/transfertActions.js","services/user.service.js","actions/userActions.js","services/agency.service.js","actions/agencyAction.js","views/users/UserForm.js","routes.js","components/AppBreadcrumb.js","helpers/PrivateRoute.js","components/AppContent.js","components/AppFooter.js","assets/images/avatars/8.jpg","components/header/AppHeaderDropdown.js","assets/brand/logo.js","components/AppHeader.js","constants.js","components/AppSidebarNav.js","_nav.js","views/transfer/ModalTransfer.js","assets/e-banking-ensa.svg","components/AppSidebar.js","layout/DefaultLayout.js"],"names":["AUTH_URL","CLIENT_USER_URL","ACCOUNT_URL","CARD_URL","SETTING_URL","TRANSFERT_CLIENT_URL","TRANSFERT_AGENT_URL","AGENCY_URL","instance","axios","create","baseURL","headers","interceptors","request","use","config","token","JSON","parse","localStorage","getItem","error","Promise","reject","login","async","data","http","post","loginForm","register","registerForm","showSuccessSwal","title","timer","icon","includes","Swal","fire","position","showConfirmButton","loginAction","AuthService","dispatch","type","ERROR_ACTION","payload","resolve","user","id","username","email","roles","AUTH_LOGIN","accessToken","setItem","stringify","err","registerAction","AUTH_REGISTER","message","logOutAction","AUTH_LOGOUT","getCardsByAccountId","get","accountId","enableOrDisableCard","action","acceptCard","put","cardId","getCardsNoAccepted","createCard","cardInfo","updateCard","fetchCardsByAccountId","CardService","FETCH_CARDS_BY_ACCOUNT_ID","fetchCardsNotAccepted","FETCH_CARDS_NOT_ACCEPTED","enableOrDisableCardAction","ENABLE_DISABLE_CARD","createCardAction","card","CREATE_CARD","updateCardAction","UPDATE_CARD","getAccountByUser","userId","enableOrDisableAccount","getListAccounts","fetchAccountByUser","AccountService","FETCH_ACCOUNTS_BY_USER","enableOrDisableAccountAction","SET_SELECTED_ACCOUNT","getListAccountsAction","FETCH_ALL_ACCOUNTS","ModalComptes","from","visible","setVisible","step","handelFullModal","useDispatch","accountState","useSelector","state","accounts","setAccounts","useState","selectedAccount","setSelectedAccount","useEffect","ownAccounts","length","principalAccount","find","account","principal","alignment","onClose","myComptes","map","item","checked","isPrincipal","closeModal","index","onClick","selecteAccountToTransfer","className","classNames","active","color","shape","text","undefined","SET_DATA_SOURCE","compte","SET_DATA_DESTINATAIRE","alert","disabled","ModalTransferFromUser","setStep","dataSource","dataDestination","transferInfo","fullscreen","closeButton","style","display","padding","steps","label","activeStep","Step0","Step1","Step2","NextStepFooter","UserList","userState","transferState","modalCompteVisible","setModalCompteVisible","modalStep","setModalStep","displayClientInfoModal","setDisplayClientInfoModal","users","setUsers","visibleFullScreenUsers","setVisibleFullScreenUsers","clients","forEach","cin","firstname","lastname","_userId","actions","client","filter","items","columnFilter","columnSorter","pagination","clickableRows","tableProps","striped","hover","scopedColumns","size","getClickedClient","cilTransfer","myClient","FETCH_USER","displayClientInfo","cilUser","value","UserForm","EmptyData","status","role","defaultProps","motif","price","soustraction","parseInt","console","log","destinationAccountId","amount","createTransferAction","transferHandler","CardConfirmation","header","CardPrice","accountNumber","setTransferInfo","dispatchTransferHandler","field","SET_TRANSFERT_INFO","component","htmlFor","onChange","e","target","cilDollar","placeholder","marginTop","getListTransfers","createTransfer","getListTransfersAction","TransferService","FETCH_TRANSFETS","CREATE_TRANSFER","fetchUsers","phone","enabled","address","agencyId","birthday","deleted","recipients","fetchUser","updateUser","fetchAllUsers","UserService","FETCH_USERS","updateUserAction","UPDATE_USER","getAgencyById","getListAgencies","createAgency","agency","getListAgenciesAction","AgencyService","FETCH_AGENCIES","createAgencyAction","CREATE_AGENCY","activeTab","setActiveTab","editMode","setEditMode","selectedClient","setSelectedClient","accountsByClient","setAccountsByClient","cardsByClient","setCardsByClient","cardState","accountsByUser","cardsByUser","activeTabHandler","tabIndex","editClientChangeHandler","event","paddingBottom","textAlign","md","lg","xl","autoComplete","cilLockLocked","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","res","confirmChange","cilSave","cilPencil","variant","cilCreditCard","cilSettings","getAccountInfo","balance","content","placement","dateExpiration","routes","path","exact","name","React","lazy","private","AppBreadcrumb","currentLocation","useLocation","pathname","getRouteName","currentRoute","route","breadcrumbs","location","split","reduce","prev","curr","array","currentPathname","push","getBreadcrumbs","href","breadcrumb","key","memo","PrivateRoute","children","rest","auth","isAuthenticated","render","to","AppContent","fallback","idx","props","AppFooter","rel","AppHeaderDropdown","history","useHistory","caret","src","avatar8","cilBell","cilEnvelopeOpen","cilTask","cilCommentSquare","cilFile","removeItem","cursor","logo","AppHeader","sidebarShow","userReducer","fluid","cilMenu","height","alt","NavLink","activeClassName","cilList","ROLE_ADMIN","ALL_ROLES","AppSidebarNav","navLink","badge","myItems","authState","Fragment","bgColor","Component","navItem","_nav","CNavItem","cilPeople","customClassName","cilMoney","cilBank","ModalTransfer","AppSidebar","sidebarUnfoldable","unfoldable","onVisibleChange","EbankingLogo","navigation","TypeTransfer","types","setTypes","default","visibleFullScreen","setVisibleFullScreen","myTypes","el","changeTypeHandler","selectedType","nextByType","DefaultLayout"],"mappings":"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","file":"static/js/6.9eda742a.chunk.js","sourcesContent":["export const AUTH_URL =\n  \"https://my-authentication-service-t.herokuapp.com/api/auth/\";\nexport const CLIENT_USER_URL =\n  \"https://my-client-service-t.herokuapp.com/api/users/\";\nexport const ACCOUNT_URL = \n\"https://my-account-service-tt.herokuapp.com/Account/\";\nexport const CARD_URL = \n\"https://my-card-service-ttt.herokuapp.com/Card/\";\nexport const SETTING_URL =\n  \"https://my-setting-service-t.herokuapp.com/Parameter/\";\nexport const TRANSFERT_CLIENT_URL =\n  \"https://transfer-client-service-t.herokuapp.com/transfer-client/\";\nexport const TRANSFERT_AGENT_URL =\n  \"https://my-transfert-agent-service.herokuapp.com/api/transfer-agent/\"; \n  export const AGENCY_URL = \n  \"https://my-agency-service-tt.herokuapp.com/Agency/\";\n ","import axios from \"axios\";\n\nconst baseURL = \"https://my-api-gateway-ttt.herokuapp.com/\"\nconst instance = axios.create({\n  baseURL,\n  headers: {\n    \"Content-type\": \"application/json\",\n  },\n});\n\ninstance.interceptors.request.use(\n  (config) => {\n    const token = JSON.parse(localStorage.getItem(\"token\"));\n    if (token) {\n      config.headers[\"Authorization\"] = \"Bearer \" + token;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\n\nexport default instance;\n","import { AUTH_URL } from \".\";\nimport http from \"../http-common\";\n\n class AuthService {\n  login = async (loginForm) => {\n    const { data, error } = await http.post(AUTH_URL + 'signin', loginForm);\n    return { data, error };\n  };\n  \n  \n  register = async (registerForm) => { \n    const { data, error } = await http.post(AUTH_URL+'signup' , registerForm);\n    return { data, error };\n  }\n\n\n}\n\nexport default new AuthService();\n","import Swal from 'sweetalert2';\n\nexport const showSuccessSwal = ({ title = 'Your work has been saved', timer = 1500 }) => {\n    const icon = title.includes(\"Error\") ? \"error\" : \"success\";\n    Swal.fire({\n      position: \"top-end\",\n      icon,\n      title,\n      timer,\n      showConfirmButton: false,\n    });\n\n}\n","import { AUTH_LOGIN, AUTH_LOGOUT, AUTH_REGISTER, ERROR_ACTION } from \"./types\";\nimport AuthService from \"../services/auth.service\";\nimport { showSuccessSwal } from \"../helpers/SweetAlert\";\n\nexport const loginAction = (loginForm) => async (dispatch) => {\n  try {\n    const { data, error } = await AuthService.login(loginForm);\n    if (error) {\n      dispatch({\n        type: ERROR_ACTION,\n        payload: data,\n      });\n      return Promise.resolve(error);\n    } else {\n      const user = {\n        id: data.id,\n        username: data.username,\n        email: data.email,\n        roles: data.roles,\n      }\n      dispatch({\n        type: AUTH_LOGIN,\n        payload: { user, token: data.accessToken },\n      }); \n      localStorage.setItem(\"user\", JSON.stringify(user));\n      localStorage.setItem(\"token\", JSON.stringify(data.accessToken));\n      showSuccessSwal({ title: `you're log in ` })\n      return Promise.resolve(data);\n    }\n  } catch (err) {\n    return Promise.reject(err);\n  }\n};\n\n\nexport const registerAction = (registerForm) => async (dispatch) => {\n  try {\n    const { data, error } = await AuthService.register(registerForm);\n    if (error) {\n      dispatch({\n        type: ERROR_ACTION,\n        payload: error,\n      });\n      return Promise.resolve(error);\n    } else {\n      dispatch({\n        type: AUTH_REGISTER,\n        payload: data,\n      });\n      showSuccessSwal({ title: data.message })\n\n      return Promise.resolve(data);\n    }\n  } catch (err) {\n    dispatch({\n      type: ERROR_ACTION,\n      payload: err.message,\n    });\n    return Promise.reject(err);\n  }\n}\n\n\nexport const logOutAction = () => (dispatch) => {\n\n  dispatch({ type: AUTH_LOGOUT, payload: {} })\n\n}","import { CARD_URL } from \".\";\nimport http from \"../http-common\";\n\nclass CardService {\n  getCardsByAccountId = async (accountId) => {\n    const { data, error } = await http.get(\n      `${CARD_URL}getAccountCards?accountId=${accountId}`\n    );\n    return { data, error };\n  };\n\n  enableOrDisableCard = async ({ id, action }) => {\n    const { data, error } = await http.post(`${CARD_URL}${action}`, {\n      id,\n    });\n    return { data, error };\n  };\n\n  acceptCard = async (cardId) => {\n    const { data, error } = await http.put(`${CARD_URL}accept/${cardId}`, {});\n    return { data, error };\n  };\n\n  getCardsNoAccepted = async () => {\n    const { data, error } = await http.get(`${CARD_URL}getNotAcceptable`);\n    return { data, error };\n  };\n\n  createCard = async (cardInfo) => {\n    const { data, error } = await http.post(`${CARD_URL}create`, cardInfo);\n     return { data, error };\n  };\n  updateCard = async (cardInfo) => {  \n    const { data, error } = await http.put(`${CARD_URL}update`, cardInfo);\n    return { data, error };\n  };\n}\nexport default new CardService();\n","import CardService from \"src/services/card.service\";\nimport {\n  ACCEPT_CARD,\n  CREATE_CARD,\n  ENABLE_DISABLE_CARD,\n  ERROR_ACTION,\n  FETCH_CARDS_BY_ACCOUNT_ID,\n  FETCH_CARDS_NOT_ACCEPTED,\n  UPDATE_CARD,\n} from \"./types\";\n\nexport const fetchCardsByAccountId = (accountId) => async (dispatch) => {\n  try {\n    const { data, error } = await CardService.getCardsByAccountId(accountId);\n    if (error) {\n      dispatch({\n        type: ERROR_ACTION,\n        payload: error.message,\n      });\n      return Promise.resolve(error);\n    } else {\n      dispatch({\n        type: FETCH_CARDS_BY_ACCOUNT_ID,\n        payload: data,\n      });\n      return Promise.resolve(data);\n    }\n  } catch (err) {\n    return Promise.reject(err);\n  }\n};\n\nexport const fetchCardsNotAccepted = () => async (dispatch) => {\n  try {\n    const { data, error } = await CardService.getCardsNoAccepted();\n    if (error) {\n      dispatch({\n        type: ERROR_ACTION,\n        payload: error.message,\n      });\n      return Promise.resolve(error);\n    } else {\n      dispatch({\n        type: FETCH_CARDS_NOT_ACCEPTED,\n        payload: data,\n      });\n      return Promise.resolve(data);\n    }\n  } catch (err) {\n    return Promise.reject(err);\n  }\n};\n\nexport const enableOrDisableCardAction =\n  ({ id, action }) =>\n  async (dispatch) => {\n    try {\n      const { data, error } = await CardService.enableOrDisableCard({\n        id,\n        action,\n      });\n      if (error) {\n        dispatch({\n          type: ERROR_ACTION,\n          payload: error.message,\n        });\n        return Promise.resolve(error);\n      } else {\n        dispatch({\n          type: ENABLE_DISABLE_CARD,\n          payload: { ...data, id },\n        });\n        return Promise.resolve(data);\n      }\n    } catch (err) {\n      return Promise.reject(err);\n    }\n  };\n\nexport const acceptCardAction = (cardId, cardNumber) => async (dispatch) => {\n  try {\n    const { data, error } = await CardService.acceptCard(cardId);\n    if (error) {\n      dispatch({\n        type: ERROR_ACTION,\n        payload: error.message,\n      });\n      return Promise.resolve(error);\n    } else {\n      dispatch({\n        type: ACCEPT_CARD,\n        payload: { cardNumber },\n      });\n      return Promise.resolve(data);\n    }\n  } catch (err) {\n    return Promise.reject(err);\n  }\n};\n\nexport const createCardAction = (card) => async (dispatch) => {\n  try {\n    const { data, error } = await CardService.createCard(card);\n    if (error) {\n      dispatch({\n        type: ERROR_ACTION,\n        payload: error.message,\n      });\n      return Promise.reject(error);\n    } else {\n      dispatch({\n        type: CREATE_CARD,\n        payload: data,\n      });\n      return Promise.resolve(data);\n    }\n  } catch (error) {\n    dispatch({\n      type: ERROR_ACTION,\n      payload: error,\n    });\n    return Promise.reject(error);\n  }\n};\n\nexport const updateCardAction = (card) => async (dispatch) => {\n  try {\n    const { data, error } = await CardService.updateCard(card);\n    if (error) {\n      dispatch({\n        type: ERROR_ACTION,\n        payload: error.message,\n      });\n      return Promise.reject(error);\n    } else {\n      dispatch({\n        type: UPDATE_CARD,\n        payload: data,\n      });\n      return Promise.resolve(data);\n    }\n  } catch (error) {\n    dispatch({\n      type: ERROR_ACTION,\n      payload: error,\n    });\n    return Promise.reject(error);\n  }\n};\n","import { ACCOUNT_URL } from \".\";\nimport http from \"../http-common\";\n\nclass AccountService {\n  getAccountByUser = async (userId) => {\n    const { data, error } = await http.get(\n      `${ACCOUNT_URL}getUserAccounts?userId=${userId}`\n    );\n    return { data, error };\n  };\n\n  enableOrDisableAccount = async ({ accountId, action }) => {\n    const { data, error } = await http.post(`${ACCOUNT_URL}${action}`, {\n      id: accountId,\n    });\n    return { data, error };\n  };\n\n  getListAccounts = async () => {\n    const { data, error } = await http.get(ACCOUNT_URL + \"getAll\");\n    return { data, error };\n  };\n\n  \n}\n\nexport default new AccountService();\n","import AccountService from \"src/services/account.service\";\nimport {\n  ERROR_ACTION,\n  FETCH_ACCOUNTS_BY_USER,\n  FETCH_ALL_ACCOUNTS,\n  SET_SELECTED_ACCOUNT,\n} from \"./types\";\n\nexport const fetchAccountByUser = (userId) => async (dispatch) => {\n  try {\n    const { data, error } = await AccountService.getAccountByUser(userId);\n    if (error) {\n      dispatch({\n        type: ERROR_ACTION,\n        payload: error.message,\n      });\n      return Promise.resolve(error);\n    } else {\n      dispatch({\n        type: FETCH_ACCOUNTS_BY_USER,\n        payload: data,\n      });\n      return Promise.resolve(data);\n    }\n  } catch (err) {\n    return Promise.reject(err);\n  }\n};\n\nexport const enableOrDisableAccountAction =\n  ({ accountId, action }) =>\n  async (dispatch) => {\n    try {\n      const { data, error } = await AccountService.enableOrDisableAccount({\n        accountId,\n        action,\n      });\n      if (error) {\n        dispatch({\n          type: ERROR_ACTION,\n          payload: error.message,\n        });\n        return Promise.resolve(error);\n      } else {\n        dispatch({\n          type: SET_SELECTED_ACCOUNT,\n          payload: data,\n        });\n        return Promise.resolve(data);\n      }\n    } catch (err) {\n      return Promise.reject(err);\n    }\n  };\n\n\nexport const getListAccountsAction = () => async (dispatch) => {\n  try {\n    const { data, error } = await AccountService.getListAccounts();\n    if (error) {\n      dispatch({\n        type: ERROR_ACTION,\n        payload: error.message,\n      });\n      return Promise.reject(error);\n    } else {\n      dispatch({\n        type: FETCH_ALL_ACCOUNTS,\n        payload: data,\n      });\n      return Promise.resolve(data);\n    }\n  } catch (err) {\n    dispatch({\n      type: ERROR_ACTION,\n      payload: err,\n    });\n    return Promise.reject(err);\n  }\n};\n\n\n","import {\n  CBadge,\n  CButton,\n  CListGroup,\n  CListGroupItem,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n} from \"@coreui/react\";\nimport classNames from \"classnames\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { SET_DATA_DESTINATAIRE, SET_DATA_SOURCE } from \"src/actions/types\";\nimport EmptyData from \"src/helpers/EmptyData\";\n\nconst ModalComptes = ({ from, visible, setVisible, step, handelFullModal }) => {\n  const dispatch = useDispatch();\n  const accountState = useSelector(state => state['accountReducer'])\n  const [accounts, setAccounts] = useState([]);\n  const [selectedAccount, setSelectedAccount] = useState(null);\n\n\n  useEffect(() => { \n    const ownAccounts = accountState['accountsByUser']\n    if(ownAccounts && ownAccounts.length > 0){\n      setAccounts([...ownAccounts]);\n      const principalAccount = ownAccounts.find((account) => account.principal);\n      setSelectedAccount(principalAccount);\n    }\n  }, [accountState]);\n\n  const closeModal = () => {\n    const myComptes = accounts.map((item) => {\n      return { ...item, checked: item.isPrincipal };\n    });\n\n    setAccounts(myComptes);\n    setVisible(false);\n  };\n\n  const selecteAccountToTransfer = (item) =>{\n    setSelectedAccount(item);\n  } \n\n\n  const saveCompteSelected = () => { \n    if (selectedAccount) {\n      if (step === undefined || step === 0) {\n        dispatch({\n          type: SET_DATA_SOURCE,\n          payload: { compte:selectedAccount },\n        });\n      } else {\n        dispatch({\n          type: SET_DATA_DESTINATAIRE,\n          payload: { compte:selectedAccount },\n        });\n      }\n\n      setVisible(false);\n      if (from !== \"modal\") {\n        handelFullModal(true);\n      }\n    }else{\n      alert(\"Veuillez selectionner un compte\");\n    }\n  };\n\n  return (\n    <>\n      <CModal alignment=\"center\" visible={visible} onClose={() => closeModal()}>\n        <CModalHeader>\n          <CModalTitle>Choisir un compte </CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <CListGroup>\n            {accounts.length > 0 ? (\n              accounts.map((item, index) => (\n                <CListGroupItem\n                  key={index}\n                  onClick={() => selecteAccountToTransfer(item)}\n                  className={classNames(\n                    \"d-flex justify-content-between align-items-center cursor-pointer \",\n                    {\n                      active:\n                        selectedAccount && item[\"id\"] === selectedAccount[\"id\"],\n                    }\n                  )}\n                >\n                  {item[\"accountNumber\"]}\n                  <CBadge color=\"primary\" shape=\"rounded-pill\">\n                    {item[\"type\"]}\n                  </CBadge>\n                </CListGroupItem>\n              ))\n            ) : (\n              <EmptyData text=\"No Account Found\" />\n            )}\n          </CListGroup>\n        </CModalBody>\n        <CModalFooter>\n          <CButton\n            onClick={() => saveCompteSelected()}\n            color=\"primary\"\n            disabled={!selectedAccount}\n          >\n            Next\n          </CButton>\n        </CModalFooter>\n      </CModal>\n    </>\n  );\n};\n\nexport default ModalComptes;\n","import { CButton, CModal, CModalBody, CModalFooter, CModalHeader } from \"@coreui/react\";\nimport React from \"react\";\nimport { Stepper } from \"react-form-stepper\";\nimport { useSelector } from \"react-redux\";\nimport NextStepFooter from \"../transfer/NextStepFooter\";\nimport Step0 from \"../transfer/Step0\";\nimport Step1 from \"../transfer/Step1\";\nimport Step2 from \"../transfer/Step2\";\n \nexport default function ModalTransferFromUser({\n  visible,\n  setVisible,\n  step,\n  setStep,\n}) {\n  const { dataSource, dataDestination, transferInfo } = useSelector(\n    (state) => state[\"transferReducer\"]\n  );\n\n  const closeModal = () => {\n    setVisible(false);\n  };\n\n  return (\n    <>\n      <CModal fullscreen visible={visible} onClose={() => setVisible(false)}>\n        <CModalHeader\n          closeButton={false}\n          style={{ display: \"block\", padding: \"0\" }}\n        >\n          <Stepper\n            steps={[\n              { label: \"Source\" },\n              { label: \"Destainataire\" },\n              { label: \"confirmation\" },\n            ]}\n            activeStep={step}\n          />\n        </CModalHeader>\n        <CModalBody>\n          {step === 0 && <Step0 step={step} setStep={setStep} />}\n          {step === 1 && <Step1 step={step} setStep={setStep} />}\n          {step === 2 && (\n            <Step2\n              setStep={setStep}\n              dataSource={dataSource}\n              dataDestination={dataDestination}\n              transferInfo={transferInfo}\n            />\n          )}\n        </CModalBody>\n        <CModalFooter>\n          <div>\n            <CButton color=\"secondary\" onClick={() => closeModal()}>\n              Close\n            </CButton>\n          </div>\n          <div>\n            <NextStepFooter step={step} setStep={setStep} />\n          </div>\n        </CModalFooter>\n      </CModal>\n    </>\n  );\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from \"react\";\nimport { CSmartTable } from \"@coreui/react-pro\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { CButton } from \"@coreui/react\";\nimport {\n  FETCH_USER,\n  SET_DATA_DESTINATAIRE,\n  SET_DATA_SOURCE,\n} from \"src/actions/types\";\nimport ModalComptes from \"../transfer/ModalComptes\";\nimport CIcon from \"@coreui/icons-react\";\nimport { cilTransfer, cilUser } from \"@coreui/icons\";\nimport ModalTransferFromUser from \"./ModalTransferFromUser\";\nimport classNames from \"classnames\";\nimport UserForm from \"./UserForm\";\nimport { fetchAccountByUser } from \"src/actions/accountAction\";\n\nfunction UserList({ from, step, setStep }) {\n  const userState = useSelector((state) => state[\"userReducer\"]);\n  const transferState = useSelector((state) => state[\"transferReducer\"]);\n\n  const [modalCompteVisible, setModalCompteVisible] = useState(false);\n  const [modalStep, setModalStep] = useState(1);\n  const [displayClientInfoModal, setDisplayClientInfoModal] = useState(false);\n\n  const [users, setUsers] = useState([...userState.users]);\n  const [visibleFullScreenUsers, setVisibleFullScreenUsers] = useState(false);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    let clients = [];\n    userState.users.forEach((item) => {\n      const { id, cin, firstname, lastname, email } = item;\n      clients = [\n        ...clients,\n        {\n          _userId: id,\n          cin,\n          firstname,\n          lastname,\n          email,\n          actions: false,\n        },\n      ];\n    });\n    if (step === 1) {\n      const { dataSource } = transferState;\n      if (dataSource && dataSource.client && dataSource.client[\"id\"]) {\n        clients = clients.filter((item) => item.id !== dataSource.client.id);\n      }\n    }\n    setUsers([...clients]);\n  }, [userState.users]);\n\n  const getClickedClient = (client) => {\n    client = { ...client, id: client[\"_userId\"] };\n    dispatch(fetchAccountByUser(client.id));\n    if (step === undefined || step === 0) {\n      dispatch({\n        type: SET_DATA_SOURCE,\n        payload: { client },\n      });\n    } else {\n      dispatch({\n        type: SET_DATA_DESTINATAIRE,\n        payload: { client },\n      });\n    }\n    setModalCompteVisible(true);\n  };\n\n  const handelFullModal = (value) => {\n    setModalStep(1);\n    setVisibleFullScreenUsers(value);\n  };\n\n  const displayClientInfo = async (client) => {\n    client = { ...client, id: client[\"_userId\"] };\n    let myClient = userState[\"users\"].find((user) => user.id === client[\"id\"]);\n    dispatch(fetchAccountByUser(client[\"id\"]));\n    dispatch({ type: FETCH_USER, payload: { user: myClient } });\n    setDisplayClientInfoModal(!!client);\n  };\n  return (\n    <>\n      <div className=\"user-list\">\n        <CSmartTable\n          items={users}\n          columnFilter\n          columnSorter\n          pagination\n          clickableRows\n          tableProps={{\n            striped: true,\n            hover: true,\n          }}\n          scopedColumns={{\n            actions: (client) => (\n              <td\n                className={classNames(\"td-actions\", {\n                  \"d-flex justify-content-around align-items-center\": !from,\n                  \"text-center\": from,\n                })}\n              >\n                <CButton\n                  size=\"sm\"\n                  color=\"outline-success\"\n                  className=\"mx-1\"\n                  onClick={() => getClickedClient(client)}\n                >\n                  <CIcon icon={cilTransfer} />\n                </CButton>\n\n                {!from && (\n                  <CButton\n                    size=\"sm\"\n                    color=\"outline-success\"\n                    onClick={() => displayClientInfo(client)}\n                  >\n                    <CIcon icon={cilUser} />\n                  </CButton>\n                )}\n              </td>\n            ),\n          }}\n        />\n      </div>\n      {modalCompteVisible && (\n        <ModalComptes\n          from={from ? from : \"userList\"}\n          step={step}\n          setStep={setStep}\n          visible={modalCompteVisible}\n          setVisible={setModalCompteVisible}\n          handelFullModal={handelFullModal}\n        />\n      )}\n      {visibleFullScreenUsers && (\n        <ModalTransferFromUser\n          visible={visibleFullScreenUsers}\n          setVisible={setVisibleFullScreenUsers}\n          step={modalStep}\n          setStep={setModalStep}\n        />\n      )}\n\n      {displayClientInfoModal === true && (\n        <UserForm\n          visible={displayClientInfoModal}\n          setVisible={setDisplayClientInfoModal}\n        />\n      )}\n    </>\n  );\n}\n\nexport default UserList;\n","import React, { useState } from \"react\";\nimport UserList from \"../users/UserList\";\nimport ModalComptes from \"./ModalComptes\";\n\nconst Step0 = ({ step, setStep }) => {\n  const [modalCompteVisible, setModalCompteVisible] = useState(false);\n\n  return (\n    <>\n      <UserList from={\"modal\"} step={step} setStep={setStep} />\n      <ModalComptes\n        visible={modalCompteVisible}\n        setVisible={setModalCompteVisible}\n        step={step}\n        setStep={setStep}\n      />\n    </>\n  );\n};\n\nexport default Step0;\n","import React from 'react'\n\nfunction EmptyData({ status,  text }) {\n    return (\n      <div className={\"alert text-center alert-\" + status} role=\"alert\">\n        <strong> {text} </strong>\n      </div>\n    );\n}\n\nEmptyData.defaultProps = {\n    status: 'warning',\n    text: 'no data found',\n  }\nexport default EmptyData\n","import React from \"react\";\nimport { CButton } from \"@coreui/react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createTransferAction } from \"src/actions/transfertActions\";\n\nconst NextStepFooter = ({ step, setStep }) => {\n  const { dataSource, dataDestination, transferInfo } = useSelector(\n    (state) => state[\"transferReducer\"]\n  );\n\n  const dispatch = useDispatch();\n\n  const transferHandler = () => {\n    console.log(dataSource, dataDestination, transferInfo);\n    const payload = {\n      accountId: dataSource.compte[\"id\"],\n      destinationAccountId: dataDestination.compte[\"id\"],\n      amount: transferInfo.price,\n      motif: transferInfo.motif,\n      soustraction: transferInfo.soustraction,\n    };\n    dispatch(createTransferAction(payload));\n  };\n\n  if (step === 0) {\n    return (\n      <CButton\n        disabled={!dataSource.compte}\n        color=\"warning\"\n        onClick={() => setStep(1)}\n      >\n        Suivant\n      </CButton>\n    );\n  }\n  if (step === 1) {\n    return (\n      <CButton\n        disabled={!dataDestination.compte}\n        color=\"warning\"\n        onClick={() => setStep(2)}\n      >\n        Suivant\n      </CButton>\n    );\n  }\n\n  const { motif, price, soustraction } = transferInfo;\n  if (step === 2) {\n    return (\n      <CButton\n        disabled={\n          motif.length < 4 || parseInt(price) <= 0 || soustraction.length < 4\n        }\n        color=\"primary\"\n        onClick={() => transferHandler()}\n      >\n        Enregistrer\n      </CButton>\n    );\n  }\n  if (step === undefined) {\n    return <> step undefined </>;\n  }\n};\n\nexport default NextStepFooter;\n","import React, { useState } from \"react\";\nimport UserList from \"../users/UserList\";\nimport ModalComptes from \"./ModalComptes\";\n\nconst Step1 = ({step, setStep}) => {\n  const [modalCompteVisible, setModalCompteVisible] = useState(false);\n\n  return (\n    <>\n      <UserList from={\"modal\"} step={step} setStep={setStep} />\n      <ModalComptes\n        visible={modalCompteVisible}\n        setVisible={setModalCompteVisible}\n        step={step}\n        setStep={setStep}\n      />\n    </>\n  );\n};\n\nexport default Step1;\n","import React, { useState } from \"react\";\nimport { cilDollar } from \"@coreui/icons\";\nimport CIcon from \"@coreui/icons-react\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCardText,\n  CCardTitle,\n  CCol,\n  CRow,\n  CInputGroupText,\n  CInputGroup,\n  CFormInput,\n  CForm,\n  CFormSelect,\n} from \"@coreui/react\";\nimport { useDispatch } from \"react-redux\";\nimport { SET_TRANSFERT_INFO } from \"src/actions/types\";\n\nconst Step2 = ({ dataSource, dataDestination, setStep }) => {\n  return (\n    <>\n      <CRow className=\"mt-5\">\n        <CCol style={{ padding: \"1rem 1rem\" }}>\n          <CardConfirmation\n            setStep={setStep}\n            header=\"Source\"\n            data={dataSource}\n          />\n        </CCol>\n        <CCol style={{ padding: \"1rem 1rem\" }}>\n          <CardConfirmation\n            setStep={setStep}\n            header=\"Destainataire\"\n            data={dataDestination}\n          />\n        </CCol>\n        <CCol style={{ padding: \"1rem 1rem\" }}>\n          <CardPrice />\n        </CCol>\n      </CRow>\n    </>\n  );\n};\n\nexport default Step2;\n\nconst CardConfirmation = ({ data, header, setStep }) => {\n  const { client, compte } = data;\n  return (\n    <>\n      {data && client && compte && (\n        <CCard className=\"text-center\">\n          <CCardHeader> {header} </CCardHeader>\n          <CCardBody>\n            <CCardTitle>\n              {client.firstname + \" - \" + client.lastname + \" - \" + client.cin}\n            </CCardTitle>\n            <CCardText className=\"py-5\">\n              With supporting text below as a natural lead-in to additional\n              content.\n            </CCardText>\n            <CButton\n              onClick={() => setStep(header && header === \"Source\" ? 0 : 1)}\n            >\n              Modfier\n            </CButton>\n          </CCardBody>\n\n          <CCardFooter className=\"text-medium-emphasis\">\n            {compte.accountNumber}\n          </CCardFooter>\n        </CCard>\n      )}\n    </>\n  );\n};\n\nconst CardPrice = () => {\n  const [transferInfo, setTransferInfo] = useState({\n    soustraction: \"FROM_ME\",\n    price: 0,\n    motif: \"\",\n  });\n  const dispatch = useDispatch();\n  const dispatchTransferHandler = (value, field) => {\n    setTransferInfo({ ...transferInfo, [field]: value });\n    dispatch({ type: SET_TRANSFERT_INFO, payload: { value, field } });\n  };\n  return (\n    <CCard className=\"text-center\">\n      <CCardHeader>\n        <CInputGroup className=\"\">\n          <CInputGroupText component=\"label\" htmlFor=\"inputGroupSelect01\">\n            Soustraction\n          </CInputGroupText>\n          <CFormSelect\n            id=\"inputGroupSelect01\"\n            value={transferInfo.soustraction}\n            onChange={(e) =>\n              dispatchTransferHandler(e.target.value, \"soustraction\")\n            }\n          >\n            <option value=\"FROM_ME\"> From Source </option>\n            <option value=\"FROM_OTHER\">From Destinataire </option>\n            <option value=\"FROM_BOTH\"> Both </option>\n          </CFormSelect>\n        </CInputGroup>\n      </CCardHeader>\n      <CCardBody>\n        <CCardText className=\"py-5\">\n          <CForm>\n            <CInputGroup className=\"mb-3\">\n              <CInputGroupText>\n                <CIcon icon={cilDollar} />\n              </CInputGroupText>\n              <CFormInput\n                placeholder=\"prix\"\n                value={transferInfo.price}\n                onChange={(e) =>\n                  dispatchTransferHandler(e.target.value, \"price\")\n                }\n              />\n            </CInputGroup>\n            <CInputGroup style={{ marginTop: \"2.8rem\" }}>\n              <CInputGroupText>Motif</CInputGroupText>\n              <CFormInput\n                placeholder=\"Motif\"\n                value={transferInfo.motif}\n                onChange={(e) =>\n                  dispatchTransferHandler(e.target.value, \"motif\")\n                }\n              />\n            </CInputGroup>\n          </CForm>\n        </CCardText>\n      </CCardBody>\n\n      <CCardFooter className=\"text-medium-emphasis\">\n        Lorem ipsum dolor sit amet.\n      </CCardFooter>\n    </CCard>\n  );\n};\n","import { TRANSFERT_AGENT_URL, TRANSFERT_CLIENT_URL } from \".\";\nimport axios from \"../http-common\";\n\nclass TransferService {\n  getListTransfers = async () => {\n    const { data, error } = await axios.get(TRANSFERT_CLIENT_URL + \"transfers\");\n    return { data, error };\n  };\n  \n\n  createTransfer = async (transferInfo) => {\n    const { data, error } = await axios.post(TRANSFERT_AGENT_URL + \"transfer\", {\n      ...transferInfo,\n    });\n    return { data, error };\n  }\n}\n\n\nexport default new TransferService();\n","import TransferService from \"../services/TransferService\";\nimport { CREATE_TRANSFER, ERROR_ACTION, FETCH_TRANSFETS } from \"./types\";\n\nexport const getListTransfersAction = () => async (dispatch) => {\n  try {\n    const { data, error } = await TransferService.getListTransfers();\n    const params = {\n      type: error ? ERROR_ACTION : FETCH_TRANSFETS,\n      payload: error ? error : { items: data },\n    };\n    dispatch(params);\n  } catch (error) {\n    dispatch({ type: ERROR_ACTION, payload: error.message });\n  }\n};\n\n\n\nexport const createTransferAction = (payload) => async (dispatch) => {\n  try {\n    const { data, error } = await TransferService.createTransfer(payload);\n    const params = {\n      type: error ? ERROR_ACTION : CREATE_TRANSFER,\n      payload: error ? error : { item: data },\n    };\n    dispatch(params);\n  } catch (error) {\n    dispatch({ type: ERROR_ACTION, payload: error.message });\n  }\n};\n","import { CLIENT_USER_URL } from \".\";\nimport http from \"../http-common\";\n\nclass UserService {\n  fetchUsers = async () => {\n    let { data, error } = await http.get(CLIENT_USER_URL);\n    let clients = [];\n    data &&\n      data.forEach((item) => {\n        let client = {\n          id: item[\"id\"],\n          cin: item[\"cin\"],\n          firstname: item[\"firstname\"],\n          username: item[\"username\"],\n          lastname: item[\"lastname\"],\n          email: item[\"email\"],\n          phone: item[\"phone\"],\n          enabled: item[\"enabled\"],\n\n          address: item[\"address\"],\n          agencyId: item[\"agencyId\"],\n          birthday: item[\"birthday\"],\n          deleted: item[\"deleted\"],\n          recipients: item[\"recipients\"] || [],\n          accounts: item[\"accounts\"] || [],\n        };\n        clients = [...clients, { ...client }];\n      });\n    return { clients, error };\n  };\n\n  fetchUser = async (id) => {\n    const { data, error } = await http.get(CLIENT_USER_URL + \"/\" + id);\n    return { data, error };\n  };\n\n  updateUser = async (client) => {\n    const { data, error } = await http.put(CLIENT_USER_URL + \"/update\", client);\n    return { data, error };\n  };\n}\n\nexport default new UserService();\n","import UserService from \"../services/user.service\";\nimport { ERROR_ACTION, FETCH_USER, FETCH_USERS, UPDATE_USER } from \"./types\";\n\nexport const fetchAllUsers = () => async (dispatch) => {\n    try {\n        const { clients, error } = await UserService.fetchUsers();\n        if (error) {\n            dispatch({\n                type: ERROR_ACTION,\n                payload: error.message,\n            });\n            return Promise.reject(error);\n        } else {\n            dispatch({\n                type: FETCH_USERS,\n                payload: { users: clients },\n            });\n            return Promise.resolve(clients);\n        }\n    } catch (err) {\n        return Promise.reject(err);\n    }\n};\n\n\nexport const fetchUser = (userId) => async (dispatch) => {\n    try {\n        const { data, error } = await UserService.fetchUser(userId);\n        if (error) {\n            dispatch({\n                type: ERROR_ACTION,\n                payload: error.message,\n            });\n            return Promise.resolve(error);\n        } else {\n            dispatch({\n                type: FETCH_USER,\n                payload: data,\n            });\n            return Promise.resolve(data);\n        }\n    } catch (err) {\n        return Promise.reject(err);\n    }\n}\n\n\nexport const updateUserAction = (client) => async (dispatch) => {\n    try {\n        const { data, error } = await UserService.updateUser(client);\n        if (error) {\n            dispatch({\n              type: ERROR_ACTION,\n              payload: error.message,\n            });\n            return Promise.resolve(error);\n        } else {\n            dispatch({\n              type: UPDATE_USER,\n              payload: { user: data },\n            });\n            return Promise.resolve(data);\n        }\n    } catch (err) {\n        return Promise.reject(err);\n    }\n}\n\n","import { AGENCY_URL } from \".\";\nimport http from \"../http-common\";\n\nclass AgencyService {\n  getAgencyById = async (agencyId) => {\n    const { data, error } = await http.get(\n      `${AGENCY_URL}getById?agencyId=${agencyId}`\n    );\n    return { data, error };\n  };\n\n  getListAgencies = async () => {\n    const { data, error } = await http.get(AGENCY_URL + \"getAll\");\n    return { data, error };\n  };\n\n  createAgency = async (agency) => {\n    const { data, error } = await http.post(AGENCY_URL + \"add\", agency );\n    return { data, error };\n  };\n}\n\nexport default new AgencyService();\n","import AgencyService from \"src/services/agency.service\";\nimport { CREATE_AGENCY, ERROR_ACTION, FETCH_AGENCIES } from \"./types\";\n\nexport const getListAgenciesAction = () => async (dispatch) => {\n  try {\n    const { data, error } = await AgencyService.getListAgencies();\n    const params = {\n      type: error ? ERROR_ACTION : FETCH_AGENCIES,\n      payload: error ? error.message : { items: data },\n    };\n    dispatch(params);\n  } catch (error) {\n    dispatch({ type: ERROR_ACTION, payload: error });\n  }\n};\n\nexport const createAgencyAction = (agency) => async (dispatch) => {\n  try {\n    const { data, error } = await AgencyService.createAgency(agency);\n    const action = {\n      type: error ? ERROR_ACTION : CREATE_AGENCY,\n      payload: error ? error.message : { item: data },\n    };\n    dispatch(action);\n  } catch (error) {\n    dispatch({ type: ERROR_ACTION, payload: error });\n  }\n};\n","/* eslint-disable no-unused-vars */\n/* eslint-disable react-hooks/exhaustive-deps */\nimport {\n  cilCreditCard,\n  cilLockLocked,\n  cilPencil,\n  cilSave,\n  cilSettings,\n  cilUser,\n} from \"@coreui/icons\";\nimport CIcon from \"@coreui/icons-react\";\nimport {\n  CButton,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CFormSwitch,\n  CInputGroup,\n  CInputGroupText,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CNav,\n  CNavItem,\n  CNavLink,\n  CRow,\n  CTabContent,\n  CTabPane,\n  CTooltip,\n} from \"@coreui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { SET_SELECTED_ACCOUNT } from \"src/actions/types\";\nimport classNames from \"classnames\";\nimport {\n  enableOrDisableCardAction,\n  fetchCardsByAccountId,\n} from \"src/actions/cardActions\";\nimport EmptyData from \"src/helpers/EmptyData\";\nimport Swal from \"sweetalert2\";\nimport { updateUserAction } from \"src/actions/userActions\";\nimport { enableOrDisableAccountAction } from \"src/actions/accountAction\";\n\nfunction UserForm({ visible, setVisible }) {\n  const [activeTab, setActiveTab] = useState(1);\n  const [editMode, setEditMode] = useState(false);\n  const [selectedClient, setSelectedClient] = useState(null);\n  const [accountsByClient, setAccountsByClient] = useState([]);\n  const [selectedAccount, setSelectedAccount] = useState(null);\n  const [cardsByClient, setCardsByClient] = useState([]);\n\n  const userState = useSelector((state) => state[\"userReducer\"]);\n  const accountState = useSelector((state) => state[\"accountReducer\"]);\n  const cardState = useSelector((state) => state[\"cardReducer\"]);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setAccountsByClient(accountState.accountsByUser);\n    setSelectedClient(userState.user);\n    setCardsByClient(cardState.cardsByUser);\n  }, [accountState, cardState]);\n\n  const activeTabHandler = (tabIndex) => {\n    setActiveTab(tabIndex);\n  };\n\n  const getAccountInfo = (account) => {\n    dispatch({ type: SET_SELECTED_ACCOUNT, payload: { ...account } });\n    dispatch(fetchCardsByAccountId(account.id));\n    setSelectedAccount({ ...account });\n  };\n\n  const enableOrDisableAccount = (account) => {\n    const { id, enabled } = account;\n    dispatch(\n      enableOrDisableAccountAction({\n        accountId: id,\n        action: enabled ? \"disable\" : \"enable\",\n      })\n    );\n  };\n\n  const enableOrDisableCard = (card) => {\n    const { id, enabled } = card;\n    dispatch(\n      enableOrDisableCardAction({\n        cardId: id,\n        action: enabled ? \"disable\" : \"enable\",\n      })\n    );\n  };\n\n  const editClientChangeHandler = (event, field) => {\n    setSelectedClient({ ...selectedClient, [field]: event.target.value });\n  };\n\n  const confirmChange = async () => {\n    const res = await Swal.fire({\n      title: \"Are you sure?\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, save it!\",\n    });\n    if (res.isConfirmed) {\n      const res = await dispatch(updateUserAction({ ...selectedClient }));\n      setEditMode(res && res[\"id\"] ? false : true);\n      Swal.fire({\n        position: \"top-end\",\n        icon: \"success\",\n        title: \"Your work has been saved\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n  };\n\n  return (\n    <>\n      {selectedClient && selectedClient.id ? (\n        <CModal fullscreen visible={visible} onClose={() => setVisible(false)}>\n          <CModalHeader\n            closeButton={false}\n            style={{\n              display: \"block\",\n              paddingBottom: \"1rem\",\n              textAlign: \"center\",\n            }}\n          >\n            <CContainer>\n              <CRow>\n                <CCol md={8} lg={6} xl={4}>\n                  <CForm>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupText>\n                        <CIcon icon={cilUser} />\n                      </CInputGroupText>\n                      <CFormInput\n                        disabled={!editMode}\n                        placeholder=\"First Name\"\n                        autoComplete=\"First Name\"\n                        value={selectedClient.firstname || \"\"}\n                        onChange={(e) =>\n                          editClientChangeHandler(e, \"firstname\")\n                        }\n                      />\n                    </CInputGroup>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupText>@</CInputGroupText>\n                      <CFormInput\n                        disabled={!editMode}\n                        placeholder=\"CIN\"\n                        autoComplete=\"CIN\"\n                        value={selectedClient.cin || \"\"}\n                        onChange={(e) => editClientChangeHandler(e, \"cin\")}\n                      />\n                    </CInputGroup>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupText>\n                        <CIcon icon={cilLockLocked} />\n                      </CInputGroupText>\n                      <CFormInput\n                        disabled={!editMode}\n                        placeholder=\"Address\"\n                        autoComplete=\"Address\"\n                        value={selectedClient.address || \"\"}\n                        onChange={(e) => editClientChangeHandler(e, \"address\")}\n                      />\n                    </CInputGroup>\n                  </CForm>\n                </CCol>\n                <CCol md={8} lg={6} xl={4}>\n                  <CForm>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupText>\n                        <CIcon icon={cilUser} />\n                      </CInputGroupText>\n                      <CFormInput\n                        disabled={!editMode}\n                        placeholder=\"Last Name\"\n                        autoComplete=\"Last Name\"\n                        value={selectedClient.lastname || \"\"}\n                        onChange={(e) => editClientChangeHandler(e, \"lastname\")}\n                      />\n                    </CInputGroup>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupText>@</CInputGroupText>\n                      <CFormInput\n                        disabled={!editMode}\n                        placeholder=\"EMAIL\"\n                        autoComplete=\"EMAIL\"\n                        value={selectedClient.email || \"\"}\n                        onChange={(e) => editClientChangeHandler(e, \"email\")}\n                      />\n                    </CInputGroup>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupText>\n                        <CIcon icon={cilLockLocked} />\n                      </CInputGroupText>\n                      <CFormInput\n                        disabled={!editMode}\n                        placeholder=\"BirthDay\"\n                        autoComplete=\"BirthDay\"\n                        value={selectedClient.birthday || \"\"}\n                        onChange={(e) => editClientChangeHandler(e, \"birthday\")}\n                      />\n                    </CInputGroup>\n                  </CForm>\n                </CCol>\n                <CCol md={8} lg={6} xl={4}>\n                  <CForm>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupText>\n                        <CIcon icon={cilUser} />\n                      </CInputGroupText>\n                      <CFormInput\n                        disabled={!editMode}\n                        placeholder=\"User Name\"\n                        autoComplete=\"User Name\"\n                        value={selectedClient.username || \"\"}\n                        onChange={(e) => editClientChangeHandler(e, \"username\")}\n                      />\n                    </CInputGroup>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupText>@</CInputGroupText>\n                      <CFormInput\n                        disabled={!editMode}\n                        placeholder=\"Telephone\"\n                        autoComplete=\"Telephone\"\n                        value={selectedClient.phone || \"\"}\n                        onChange={(e) => editClientChangeHandler(e, \"phone\")}\n                      />\n                    </CInputGroup>\n                    <CInputGroup className=\"mb-3\">\n                      <CFormSwitch\n                        disabled={!editMode}\n                        size=\"xl\"\n                        label={\n                          (selectedClient.enabled ? \"enable\" : \"disable\") +\n                          \" Client\"\n                        }\n                        checked={selectedClient.enabled}\n                        onChange={(e) =>\n                          setSelectedClient({\n                            ...selectedClient,\n                            enabled: e.target.checked,\n                          })\n                        }\n                      />\n                    </CInputGroup>\n                  </CForm>\n                </CCol>\n              </CRow>\n            </CContainer>\n            <div style={{ textAlign: \"right\" }}>\n              {editMode && (\n                <CButton\n                  className=\"mx-2\"\n                  color=\"primary\"\n                  onClick={() => confirmChange()}\n                >\n                  <CIcon icon={cilSave} />\n                </CButton>\n              )}\n              <CButton\n                className=\"mx-2\"\n                color=\"warning\"\n                onClick={() => setEditMode(!editMode)}\n              >\n                <CIcon icon={cilPencil} />\n              </CButton>\n            </div>\n          </CModalHeader>\n          <CModalBody>\n            <CNav variant=\"pills\" className=\"user-tabs\">\n              <CNavItem>\n                <CNavLink\n                  className=\"cursor-pointer\"\n                  active={activeTab === 1}\n                  onClick={() => activeTabHandler(1)}\n                >\n                  <CIcon icon={cilCreditCard} className=\"me-2\" />\n                  Comptes\n                </CNavLink>\n              </CNavItem>\n              <CNavItem>\n                <CNavLink\n                  className=\"cursor-pointer\"\n                  active={activeTab === 2}\n                  onClick={() => activeTabHandler(2)}\n                >\n                  <CIcon icon={cilSettings} className=\"me-2\" />\n                  Setting\n                </CNavLink>\n              </CNavItem>\n            </CNav>\n            <CTabContent className=\"rounded-bottom\">\n              <CTabPane className=\"p-3 preview\" visible={activeTab === 1}>\n                <CContainer>\n                  <CRow>\n                    <CCol md={8} lg={6} xl={6}>\n                      {accountsByClient.length > 0 ? (\n                        <ul className=\"list-group\">\n                          {accountsByClient.map((account) => (\n                            <li\n                              className={classNames(\n                                \"list-group-item d-flex justify-content-between align-items-center  cursor-pointer\",\n                                {\n                                  active:\n                                    selectedAccount &&\n                                    selectedAccount.id === account.id,\n                                }\n                              )}\n                              key={account.id}\n                              onClick={() => getAccountInfo(account)}\n                            >\n                              {account[\"accountNumber\"]}\n                              <span className=\"badge badge-success badge-pill\">\n                                {account[\"type\"]}\n                              </span>\n                            </li>\n                          ))}\n                        </ul>\n                      ) : (\n                        <EmptyData text=\"there is no account yet\" />\n                      )}\n                    </CCol>\n                    {selectedAccount && (\n                      <CCol md={8} lg={6} xl={6}>\n                        <div className=\"row\">\n                          <div className=\"col-md-11\">\n                            <CInputGroup>\n                              <CInputGroupText>$</CInputGroupText>\n                              <CFormInput\n                                disabled={true}\n                                value={selectedAccount.balance}\n                              />\n                            </CInputGroup>\n                          </div>\n                          <div className=\"col-md-1\">\n                            <CTooltip\n                              content={\n                                \"click for \" +\n                                (selectedAccount.enabled\n                                  ? \"disable\"\n                                  : \"enable\") +\n                                \" this account\"\n                              }\n                              placement=\"top\"\n                            >\n                              <CButton\n                                color={\n                                  selectedAccount.enabled ? \"success\" : \"danger\"\n                                }\n                                shape=\"rounded-pill\"\n                                className=\"py-3 px-3 cursor-pointer\"\n                                onClick={() =>\n                                  enableOrDisableAccount(selectedAccount)\n                                }\n                              ></CButton>\n                            </CTooltip>\n                          </div>\n                        </div>\n                        {cardsByClient.length > 0 ? (\n                          <ul className=\"list-group mt-2\">\n                            {cardsByClient.map((card) => (\n                              <CTooltip\n                                content={\n                                  card.type + \"   \" + card.dateExpiration\n                                }\n                                key={card.id}\n                                placement=\"top\"\n                              >\n                                <li\n                                  className={\n                                    \"list-group-item d-flex justify-content-between align-items-center\"\n                                  }\n                                >\n                                  {card[\"cardNumber\"]}\n                                  <span className=\"badge badge-success badge-pill\">\n                                    <CButton\n                                      color={\n                                        card.enabled ? \"success\" : \"danger\"\n                                      }\n                                      shape=\"rounded-pill\"\n                                      className=\"py-3 px-3 cursor-pointer\"\n                                      onClick={() => enableOrDisableCard(card)}\n                                    ></CButton>\n                                  </span>\n                                </li>\n                              </CTooltip>\n                            ))}\n                          </ul>\n                        ) : (\n                          <div className=\"mt-3\">\n                            <EmptyData text=\"No cards available\" />\n                          </div>\n                        )}\n                      </CCol>\n                    )}\n                  </CRow>\n                </CContainer>\n              </CTabPane>\n              <CTabPane className=\"p-3 preview\" visible={activeTab === 2}>\n                {\"activeTab: \" + activeTab}\n              </CTabPane>\n            </CTabContent>\n          </CModalBody>\n          <CModalFooter style={{ padding: \"0rem 1rem\" }}>\n            <CButton onClick={() => setVisible(false)} color=\"secondary\">\n              Close\n            </CButton>\n          </CModalFooter>\n        </CModal>\n      ) : (\n        \"loading ...\"\n      )}\n    </>\n  );\n}\n\nexport default UserForm;\n","import React from \"react\";\n\nconst Dashboard = React.lazy(() => import(\"./views/dashboard/Dashboard\"));\n//  E-banking Components & pages\nconst Users = React.lazy(() => import(\"./views/users/Users\"));\nconst UserForm = React.lazy(() => import(\"./views/users/UserForm\"));\n\nconst CardsList = React.lazy(() => import(\"./views/cards/CardsList\"));\nconst CardForm = React.lazy(() => import(\"./views/cards/CardForm\"));\nconst UpdateCard = React.lazy(() => import(\"./views/cards/UpdateCard\"));\n\nconst TransfersList = React.lazy(() =>\n  import(\"./views/transfers/TransferList\")\n);\n\nconst AccountsList = React.lazy(() => import(\"./views/accounts/AccountsList\"));\nconst AccountForm = React.lazy(() => import(\"./views/accounts/AccountForm\"));\nconst UpdateAccount = React.lazy(() =>\n  import(\"./views/accounts/UpdateAccount\")\n);\n\nconst AgenciesList = React.lazy(() => import(\"./views/agencies/AgenciesList\"));\nconst AgencyForm = React.lazy(() => import(\"./views/agencies/AgencyForm\"));\n\nconst Settings = React.lazy(() => import(\"./views/settings/Settings\"));\n\nconst routes = [\n  { path: \"/\", exact: true, name: \"Home\" },\n  { path: \"/dashboard\", name: \"Dashboard\", component: Dashboard },\n\n  {\n    path: \"/users\",\n    name: \"users\",\n    component: Users,\n    exact: true,\n  },\n  {\n    path: \"/users/{id}\",\n    name: \"user-details\",\n    component: UserForm,\n  },\n\n  {\n    path: \"/cards\",\n    name: \"Card List\",\n    component: CardsList,\n  },\n  {\n    path: \"/card\",\n    name: \"Add card\",\n    component: CardForm,\n  },\n  { path: \"/editCard\", name: \"Edit Card\", component: UpdateCard },\n\n  { path: \"/transfers\", name: \"Transfer-list\", component: TransfersList },\n\n  { path: \"/accounts\", name: \"Accounts-list\", component: AccountsList },\n  { path: \"/account\", name: \"Add account\", component: AccountForm },\n  { path: \"/editAccount\", name: \"Edit Account\", component: UpdateAccount },\n\n  {\n    path: \"/agencies\",\n    name: \"agencies-list\",\n    component: AgenciesList,\n  },\n  {\n    path: \"/agency\",\n    name: \"Add agency\",\n    component: AgencyForm,\n  },\n\n  {\n    path: \"/settings\",\n    name: \"settings\",\n    component: Settings,\n    private: true,\n  },\n];\n\nexport default routes;\n","import React from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nimport routes from \"../routes\";\n\nimport { CBreadcrumb, CBreadcrumbItem } from \"@coreui/react\";\n\nconst AppBreadcrumb = () => {\n  const currentLocation = useLocation().pathname;\n\n  const getRouteName = (pathname, routes) => {\n    const currentRoute = routes.find((route) => route.path === pathname);\n    if (currentRoute && currentRoute.name) return currentRoute.name;\n    else return null;\n  };\n\n  const getBreadcrumbs = (location) => {\n    const breadcrumbs = [];\n    location.split(\"/\").reduce((prev, curr, index, array) => {\n      const currentPathname = `${prev}/${curr}`;\n      breadcrumbs.push({\n        pathname: currentPathname,\n        name: getRouteName(currentPathname, routes),\n        active: index + 1 === array.length ? true : false,\n      });\n      return currentPathname;\n    });\n    return breadcrumbs;\n  };\n\n  const breadcrumbs = getBreadcrumbs(currentLocation);\n\n  return (\n    <CBreadcrumb className=\"m-0 ms-2 p-0\">\n      <CBreadcrumbItem href=\"/\">Home</CBreadcrumbItem>\n      {breadcrumbs.map((breadcrumb, index) => {\n        return (\n          <CBreadcrumbItem\n            {...(breadcrumb.active\n              ? { active: true }\n              : { href: breadcrumb.pathname })}\n            key={index}\n          >\n            {breadcrumb.name}\n          </CBreadcrumbItem>\n        );\n      })}\n    </CBreadcrumb>\n  );\n};\n\nexport default React.memo(AppBreadcrumb);\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Redirect, Route } from \"react-router-dom\"; \n \nexport function PrivateRoute({ children, ...rest }) {\n  const authState = useSelector((state) => state[\"authReducer\"]);\n  const auth = authState.isAuthenticated; \n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        auth ? (\n          children\n        ) : (\n          <Redirect to={{ pathname: \"/login\", state: { from: location } }} />\n        )\n      }\n    />\n  );\n}\n\n \n","import React, { Suspense } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { CContainer, CSpinner } from \"@coreui/react\";\nimport routes from \"../routes\";\nimport { PrivateRoute } from \"src/helpers/PrivateRoute\";\n\nconst AppContent = () => {\n  return (\n    <CContainer lg>\n      <Suspense fallback={<CSpinner color=\"primary\" />}>\n        <Switch>\n          {routes.map((route, idx) => {\n            return !route.private ? (\n              <Route\n                key={idx}\n                path={route.path}\n                exact={route.exact}\n                name={route.name}\n                render={(props) => (\n                  <>\n                    <route.component {...props} />\n                  </>\n                )}\n              />\n            ) : (\n              <PrivateRoute\n                exact={route.exact}\n                name={route.name}\n                path={route.path}\n                key={idx}\n              >\n                <route.component />\n              </PrivateRoute>\n            );\n          })}\n        </Switch>\n      </Suspense>\n    </CContainer>\n  );\n};\n\nexport default React.memo(AppContent);\n","import React from 'react'\nimport { CFooter } from '@coreui/react'\n\nconst AppFooter = () => {\n  return (\n    <CFooter>\n      <div>\n        <span className=\"ms-1\">&copy; 2022 creativeLabs.</span>\n      </div>\n      <div className=\"ms-auto\">\n        <span className=\"me-1\">Cretaed by</span>\n        <a href=\"https://coreui.io/react\" target=\"_blank\" rel=\"noopener noreferrer\">\n          ENSA-SAFI\n        </a>\n      </div>\n    </CFooter>\n  )\n}\n\nexport default React.memo(AppFooter)\n","export default __webpack_public_path__ + \"static/media/8.35ee8919.jpg\";","import React from 'react'\nimport { CAvatar, CBadge, CDropdown, CDropdownDivider, CDropdownHeader, CDropdownItem, CDropdownMenu, CDropdownToggle } from '@coreui/react'\nimport { cilBell, cilCreditCard, cilCommentSquare, cilEnvelopeOpen, cilFile, cilLockLocked, cilSettings, cilTask, cilUser } from '@coreui/icons'\nimport CIcon from '@coreui/icons-react'\nimport avatar8 from './../../assets/images/avatars/8.jpg'\nimport { useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { logOutAction } from 'src/actions/authAction'\n\nconst AppHeaderDropdown = () => {\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  const logout = () => { \n    localStorage.removeItem('user')\n    localStorage.removeItem('token')\n    dispatch(logOutAction())\n    history.push('/login')\n  }\n\n\n  return (\n    <CDropdown variant=\"nav-item\">\n      <CDropdownToggle placement=\"bottom-end\" className=\"py-0\" caret={false}>\n        <CAvatar src={avatar8} size=\"md\" />\n      </CDropdownToggle>\n      <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n        <CDropdownHeader className=\"bg-light fw-semibold py-2\">Account</CDropdownHeader>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilBell} className=\"me-2\" />\n          Updates\n          <CBadge color=\"info\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilEnvelopeOpen} className=\"me-2\" />\n          Messages\n          <CBadge color=\"success\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilTask} className=\"me-2\" />\n          Tasks\n          <CBadge color=\"danger\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilCommentSquare} className=\"me-2\" />\n          Comments\n          <CBadge color=\"warning\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem>\n        <CDropdownHeader className=\"bg-light fw-semibold py-2\">Settings</CDropdownHeader>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilUser} className=\"me-2\" />\n          Profile\n        </CDropdownItem>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilSettings} className=\"me-2\" />\n          Settings\n        </CDropdownItem>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilCreditCard} className=\"me-2\" />\n          Payments\n          <CBadge color=\"secondary\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilFile} className=\"me-2\" />\n          Projects\n          <CBadge color=\"primary\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem>\n        <CDropdownDivider />\n        <CDropdownItem onClick={() => logout()} style={{ cursor: 'pointer' }}  >\n          <CIcon icon={cilLockLocked} className=\"me-2\" />\n          Log out\n        </CDropdownItem>\n      </CDropdownMenu>\n    </CDropdown>\n  )\n}\n\nexport default AppHeaderDropdown\n","export const logo = [\n  '608 134',\n  `\n  <title>coreui react pro</title>\n  <g>\n    <g style=\"fill:#00a1ff\">\n      <path d=\"M362.0177,90.1512,353.25,69.4149a.2507.2507,0,0,0-.2559-.1914H343.01a.2263.2263,0,0,0-.2559.2559V90.0233a.5657.5657,0,0,1-.64.64h-1.2163a.5652.5652,0,0,1-.64-.64V46.5028a.5655.5655,0,0,1,.64-.64H353.442a9.9792,9.9792,0,0,1,7.7437,3.2324A12.2,12.2,0,0,1,364.13,57.64a12.4389,12.4389,0,0,1-2.24,7.584,9.37,9.37,0,0,1-6.08,3.7441c-.1709.086-.2139.1915-.128.3194l8.7041,20.6084.064.2558q0,.5127-.5757.5118h-1.1523A.703.703,0,0,1,362.0177,90.1512ZM342.754,48.3593v18.496a.2259.2259,0,0,0,.2559.2559h10.3037a7.6713,7.6713,0,0,0,6.0166-2.5918,9.8807,9.8807,0,0,0,2.3037-6.8164,10.2875,10.2875,0,0,0-2.272-6.9756,7.6033,7.6033,0,0,0-6.0483-2.624H343.01A.2263.2263,0,0,0,342.754,48.3593Z\"/>\n      <path d=\"M401.3263,48.1034H381.2945a.2262.2262,0,0,0-.2558.2559v18.496a.2259.2259,0,0,0,.2558.2559h13.8238a.5664.5664,0,0,1,.6406.64v.96a.5663.5663,0,0,1-.6406.6406H381.2945a.2263.2263,0,0,0-.2558.2559v18.56a.2258.2258,0,0,0,.2558.2558h20.0318a.5671.5671,0,0,1,.6406.6407v.96a.566.566,0,0,1-.6406.64H379.1827a.5653.5653,0,0,1-.64-.64V46.5028a.5656.5656,0,0,1,.64-.64h22.1436a.5664.5664,0,0,1,.6406.64v.96A.5663.5663,0,0,1,401.3263,48.1034Z\"/>\n      <path d=\"M439.047,90.1512l-2.4317-8.832a.2971.2971,0,0,0-.32-.1924H419.5274a.2957.2957,0,0,0-.32.1924l-2.3681,8.7676a.6577.6577,0,0,1-.7036.5762H414.919a.5385.5385,0,0,1-.5756-.7041l12.0317-43.584a.6436.6436,0,0,1,.7041-.5117h1.6a.6442.6442,0,0,1,.7041.5117l12.16,43.584.0644.1923q0,.5127-.64.5118h-1.2163A.6428.6428,0,0,1,439.047,90.1512ZM419.9435,78.9188a.3031.3031,0,0,0,.2236.0967h15.4883a.3048.3048,0,0,0,.2236-.0967c.0645-.0635.0742-.1162.0322-.1592l-7.872-28.9287c-.043-.0849-.086-.1279-.128-.1279s-.0859.043-.1279.1279L419.9112,78.76C419.8683,78.8026,419.879,78.8553,419.9435,78.9188Z\"/>\n      <path d=\"M456.6017,87.911a11.6372,11.6372,0,0,1-3.3277-8.7041V57.1913a11.4158,11.4158,0,0,1,3.36-8.5762,12.0941,12.0941,0,0,1,8.8-3.2637,12.2566,12.2566,0,0,1,8.8643,3.2315,11.3927,11.3927,0,0,1,3.36,8.6084v.64a.5663.5663,0,0,1-.6406.6407l-1.28.0634q-.6408,0-.64-.5761v-.8321a9.289,9.289,0,0,0-2.6558-6.9121,10.6734,10.6734,0,0,0-14.0161,0,9.2854,9.2854,0,0,0-2.6563,6.9121V79.3993a9.2808,9.2808,0,0,0,2.6563,6.9121,10.67,10.67,0,0,0,14.0161,0,9.2843,9.2843,0,0,0,2.6558-6.9121v-.7686q0-.5757.64-.5752l1.28.0635a.5667.5667,0,0,1,.6406.6406v.5118a11.4952,11.4952,0,0,1-3.36,8.64,13.6227,13.6227,0,0,1-17.6963,0Z\"/>\n      <path d=\"M514.4376,46.5028v.96a.5658.5658,0,0,1-.64.6406H503.046a.2263.2263,0,0,0-.2559.2559v41.664a.566.566,0,0,1-.6406.64h-1.2158a.5652.5652,0,0,1-.64-.64V48.3593a.2266.2266,0,0,0-.2558-.2559H489.8619a.5656.5656,0,0,1-.64-.6406v-.96a.5656.5656,0,0,1,.64-.64H513.798A.5658.5658,0,0,1,514.4376,46.5028Z\"/>\n      <path d=\"M522.0665,89.5116a2.8385,2.8385,0,0,1-.8-2.0488,2.9194,2.9194,0,0,1,.8-2.1114,2.7544,2.7544,0,0,1,2.08-.832,2.8465,2.8465,0,0,1,2.9438,2.9434,2.7541,2.7541,0,0,1-.832,2.08,2.9221,2.9221,0,0,1-2.1118.8008A2.754,2.754,0,0,1,522.0665,89.5116Z\"/>\n      <path d=\"M542.4054,88.0077a11.3123,11.3123,0,0,1-3.2-8.416v-5.44a.5656.5656,0,0,1,.64-.64h1.2158a.5661.5661,0,0,1,.64.64v5.5039a9.1424,9.1424,0,0,0,2.5283,6.72,8.9745,8.9745,0,0,0,6.6875,2.5605,8.7908,8.7908,0,0,0,9.28-9.28V46.5028a.5655.5655,0,0,1,.64-.64h1.2163a.566.566,0,0,1,.64.64V79.5917a11.2545,11.2545,0,0,1-3.2325,8.416,13.0618,13.0618,0,0,1-17.0556,0Z\"/>\n      <path d=\"M580.35,88.1034a10.4859,10.4859,0,0,1-3.36-8.1279v-1.792a.5663.5663,0,0,1,.64-.6407h1.0884a.5668.5668,0,0,1,.64.6407v1.6a8.5459,8.5459,0,0,0,2.752,6.6562,10.5353,10.5353,0,0,0,7.36,2.4961,9.8719,9.8719,0,0,0,6.9761-2.3681,8.2161,8.2161,0,0,0,2.56-6.336,8.4,8.4,0,0,0-1.12-4.416,11.3812,11.3812,0,0,0-3.3281-3.3926,71.6714,71.6714,0,0,0-6.1763-3.7119,71.0479,71.0479,0,0,1-6.24-3.84,12.1711,12.1711,0,0,1-3.4238-3.68,10.2614,10.2614,0,0,1-1.28-5.3438,9.8579,9.8579,0,0,1,3.0718-7.7441,12.0122,12.0122,0,0,1,8.32-2.752q5.6954,0,8.96,3.1036a10.8251,10.8251,0,0,1,3.2642,8.2246v1.6a.5658.5658,0,0,1-.64.64h-1.1519a.5652.5652,0,0,1-.64-.64V56.8075a8.8647,8.8647,0,0,0-2.624-6.6885,9.9933,9.9933,0,0,0-7.232-2.5273,9.37,9.37,0,0,0-6.5278,2.1435,7.8224,7.8224,0,0,0-2.3682,6.1123,7.8006,7.8006,0,0,0,1.0244,4.16,10.387,10.387,0,0,0,3.0078,3.0391,62.8714,62.8714,0,0,0,5.9522,3.4882,71.0575,71.0575,0,0,1,6.72,4.2559,13.4674,13.4674,0,0,1,3.648,3.9365,10.049,10.049,0,0,1,1.28,5.1836,10.7177,10.7177,0,0,1-3.2637,8.1924q-3.2637,3.0717-8.832,3.0723Q583.71,91.1757,580.35,88.1034Z\"/>\n    </g>\n    <g style=\"fill:#3c4b64\">\n      <g>\n        <path d=\"M99.835,36.0577l-39-22.5167a12,12,0,0,0-12,0l-39,22.5166a12.0339,12.0339,0,0,0-6,10.3924V91.4833a12.0333,12.0333,0,0,0,6,10.3923l39,22.5167a12,12,0,0,0,12,0l39-22.5167a12.0331,12.0331,0,0,0,6-10.3923V46.45A12.0334,12.0334,0,0,0,99.835,36.0577Zm-2,55.4256a4,4,0,0,1-2,3.4641l-39,22.5167a4.0006,4.0006,0,0,1-4,0l-39-22.5167a4,4,0,0,1-2-3.4641V46.45a4,4,0,0,1,2-3.4642l39-22.5166a4,4,0,0,1,4,0l39,22.5166a4,4,0,0,1,2,3.4642Z\"/>\n        <path d=\"M77.8567,82.0046h-2.866a4,4,0,0,0-1.9247.4934L55.7852,91.9833,35.835,80.4648V57.4872l19.95-11.5185,17.2893,9.4549a3.9993,3.9993,0,0,0,1.9192.4906h2.8632a2,2,0,0,0,2-2V51.2024a2,2,0,0,0-1.04-1.7547L59.628,38.9521a8.0391,8.0391,0,0,0-7.8428.09L31.8346,50.56a8.0246,8.0246,0,0,0-4,6.9287v22.976a8,8,0,0,0,4,6.9283l19.95,11.5186a8.0429,8.0429,0,0,0,7.8433.0879l19.19-10.5312a2,2,0,0,0,1.0378-1.7533v-2.71A2,2,0,0,0,77.8567,82.0046Z\"/>\n      </g>\n      <g>\n        <path d=\"M172.58,45.3618a15.0166,15.0166,0,0,0-15,14.9995V77.6387a15,15,0,0,0,30,0V60.3613A15.0166,15.0166,0,0,0,172.58,45.3618Zm7,32.2769a7,7,0,0,1-14,0V60.3613a7,7,0,0,1,14,0Z\"/>\n        <path d=\"M135.9138,53.4211a7.01,7.01,0,0,1,7.8681,6.0752.9894.9894,0,0,0,.9843.865h6.03a1.0108,1.0108,0,0,0,.9987-1.0971,15.0182,15.0182,0,0,0-15.7162-13.8837,15.2881,15.2881,0,0,0-14.2441,15.4163V77.2037A15.288,15.288,0,0,0,136.0792,92.62a15.0183,15.0183,0,0,0,15.7162-13.8842,1.0107,1.0107,0,0,0-.9987-1.0971h-6.03a.9894.9894,0,0,0-.9843.865,7.01,7.01,0,0,1-7.8679,6.0757,7.1642,7.1642,0,0,1-6.0789-7.1849V60.6057A7.1638,7.1638,0,0,1,135.9138,53.4211Z\"/>\n        <path d=\"M218.7572,72.9277a12.1585,12.1585,0,0,0,7.1843-11.0771V58.1494A12.1494,12.1494,0,0,0,213.7921,46H196.835a1,1,0,0,0-1,1V91a1,1,0,0,0,1,1h6a1,1,0,0,0,1-1V74h6.6216l7.9154,17.4138a1,1,0,0,0,.91.5862h6.5911a1,1,0,0,0,.91-1.4138Zm-.8157-11.0771A4.1538,4.1538,0,0,1,213.7926,66h-9.8511V54h9.8511a4.1538,4.1538,0,0,1,4.1489,4.1494Z\"/>\n        <path d=\"M260.835,46h-26a1,1,0,0,0-1,1V91a1,1,0,0,0,1,1h26a1,1,0,0,0,1-1V85a1,1,0,0,0-1-1h-19V72h13a1,1,0,0,0,1-1V65a1,1,0,0,0-1-1h-13V54h19a1,1,0,0,0,1-1V47A1,1,0,0,0,260.835,46Z\"/>\n        <path d=\"M298.835,46h-6a1,1,0,0,0-1,1V69.6475a7.0066,7.0066,0,1,1-14,0V47a1,1,0,0,0-1-1h-6a1,1,0,0,0-1,1V69.6475a15.0031,15.0031,0,1,0,30,0V47A1,1,0,0,0,298.835,46Z\"/>\n        <rect x=\"307.835\" y=\"46\" width=\"8\" height=\"38\" rx=\"1\"/>\n      </g>\n    </g>\n  </g>\n`,\n]\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { CContainer, CHeader, CHeaderBrand, CHeaderDivider, CHeaderNav, CHeaderToggler, CNavLink, CNavItem } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilBell, cilEnvelopeOpen, cilList, cilMenu } from '@coreui/icons'\n\nimport { AppBreadcrumb } from './index'\nimport { AppHeaderDropdown } from './header/index'\nimport { logo } from 'src/assets/brand/logo'\n\nconst AppHeader = () => {\n  const dispatch = useDispatch()\n  const { sidebarShow } = useSelector(state => state.userReducer)\n\n  return (\n    <CHeader position=\"sticky\" className=\"mb-4\">\n      <CContainer fluid>\n        <CHeaderToggler\n          className=\"ps-1\"\n          onClick={() => dispatch({ type: 'set', payload: sidebarShow })}\n        >\n          <CIcon icon={cilMenu} size=\"lg\" />\n        </CHeaderToggler>\n        <CHeaderBrand className=\"mx-auto d-md-none\" to=\"/\">\n          <CIcon icon={logo} height={48} alt=\"Logo\" />\n        </CHeaderBrand>\n        <CHeaderNav className=\"d-none d-md-flex me-auto\">\n          <CNavItem>\n            <CNavLink to=\"/dashboard\" component={NavLink} activeClassName=\"active\">\n              Dashboard\n            </CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink to=\"/users\" component={NavLink}>Users</CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink to=\"/settings\" component={NavLink} >Settings</CNavLink>\n          </CNavItem>\n        </CHeaderNav>\n        <CHeaderNav>\n          <CNavItem>\n            <CNavLink href=\"#\">\n              <CIcon icon={cilBell} size=\"lg\" />\n            </CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink href=\"#\">\n              <CIcon icon={cilList} size=\"lg\" />\n            </CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink href=\"#\">\n              <CIcon icon={cilEnvelopeOpen} size=\"lg\" />\n            </CNavLink>\n          </CNavItem>\n        </CHeaderNav>\n        <CHeaderNav className=\"ms-3\">\n          <AppHeaderDropdown />\n        </CHeaderNav>\n      </CContainer>\n      <CHeaderDivider />\n      <CContainer fluid>\n        <AppBreadcrumb />\n      </CContainer>\n    </CHeader>\n  )\n}\n\nexport default AppHeader\n","export const ROLE_USER = \"ROLE_USER\";\nexport const ROLE_AGENT = \"ROLE_AGENT\";\nexport const ROLE_ADMIN = \"ROLE_ADMIN\";\nexport const ALL_ROLES = \"ALL_ROLES\";","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nimport { CBadge } from \"@coreui/react\";\nimport { useSelector } from \"react-redux\";\nimport { ALL_ROLES, ROLE_ADMIN } from \"src/constants\";\n\nexport const AppSidebarNav = ({ items }) => {\n  const navLink = (name, icon, badge) => {\n    return (\n      <>\n        {icon && icon}\n        {name && name}\n        {badge && (\n          <CBadge color={badge.color} className=\"ms-auto\">\n            {badge.text}\n          </CBadge>\n        )}\n      </>\n    );\n  };\n\n  const navItem = (item, index) => {\n    const { component, name, badge, icon, bgColor, state, ...rest } = item;\n    const Component = component;\n    return (\n      <Component\n        key={index}\n        {...(rest.to &&\n          !rest.items && {\n            component: NavLink,\n            activeClassName: \"active\",\n          })}\n        {...rest}\n      >\n        {navLink(name, icon, badge, bgColor)}\n      </Component>\n    );\n  };\n\n  // const navGroup = (item, index) => {\n  //   const { component, name, icon, to, ...rest } = item;\n  //   const Component = component;\n  //   return (\n  //     <Component\n  //       idx={String(index)}\n  //       key={index}\n  //       toggler={navLink(name, icon)}\n  //       visible={location.pathname.startsWith(to)}\n  //       {...rest}\n  //     >\n  //       {item.items?.map((item, index) =>\n  //         item.items ? navGroup(item, index) : navItem(item, index)\n  //       )}\n  //     </Component>\n  //   );\n  // };\n\n  let myItems = [...items];\n  const authState = useSelector((state) => state[\"authReducer\"]);\n  if (authState && authState.user && authState.user['roles'].length > 0) {\n    const user = authState.user;\n    if (user.roles.includes(ALL_ROLES) || user.roles.includes(ROLE_ADMIN)) {\n      myItems = [...items];\n    } else {\n      myItems = items.filter(\n        (item) => item.state && item.state.role !== ROLE_ADMIN\n      );\n    }\n  } \n  return (\n    <React.Fragment>\n      {myItems && myItems.map((item, index) => navItem(item, index))}\n    </React.Fragment>\n  );\n};\n\nAppSidebarNav.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n};\n","import React from \"react\";\nimport CIcon from \"@coreui/icons-react\";\nimport {\n  cilMoney,\n  cilPeople,\n  cilCreditCard,\n  cilSettings,\n  cilTransfer,\n  cilBank,\n} from \"@coreui/icons\";\nimport { CNavItem } from \"@coreui/react\";\nimport { ROLE_ADMIN, ALL_ROLES } from \"./constants\";\n\nconst _nav = [\n  {\n    component: CNavItem,\n    name: \"Users\",\n    to: \"/users\",\n    icon: <CIcon icon={cilPeople} customClassName=\"nav-icon\" />,\n    state: { role: ALL_ROLES },\n  },\n  {\n    component: CNavItem,\n    name: \"Cards\",\n    to: \"/cards\",\n    icon: <CIcon icon={cilCreditCard} customClassName=\"nav-icon\" />,\n    state: { role: ALL_ROLES },\n  },\n  {\n    component: CNavItem,\n    name: \"Transfers\",\n    to: \"/transfers\",\n    icon: <CIcon icon={cilTransfer} customClassName=\"nav-icon\" />,\n    state: { role: ALL_ROLES },\n  },\n  {\n    component: CNavItem,\n    name: \"Accounts\",\n    to: \"/accounts\",\n    icon: <CIcon icon={cilMoney} customClassName=\"nav-icon\" />,\n    state: { role: ALL_ROLES },\n  },\n  {\n    component: CNavItem,\n    name: \"Agencies\",\n    to: \"/agencies\",\n    icon: <CIcon icon={cilBank} customClassName=\"nav-icon\" />,\n    state: { role: ROLE_ADMIN },\n  },\n  {\n    component: CNavItem,\n    name: \"Settings\",\n    to: \"/settings\",\n    icon: <CIcon icon={cilSettings} customClassName=\"nav-icon\" />,\n    state: { role: ROLE_ADMIN },\n  },\n];\n\nexport default _nav;\n","import React from \"react\";\nimport {\n  CButton,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n} from \"@coreui/react\";\nimport { Stepper } from \"react-form-stepper\";\nimport Step0 from \"./Step0\";\nimport Step1 from \"./Step1\";\nimport Step2 from \"./Step2\";\nimport NextStepFooter from \"./NextStepFooter\";\nimport { useSelector } from \"react-redux\";\n\nconst ModalTransfer = ({ visible, setVisible, step, setStep  }) => {\n  const { dataSource, dataDestination, transferInfo } = useSelector(\n    (state) => state[\"transferReducer\"]\n  );\n\n  const closeModal = () => {\n    setVisible(false);\n    setStep(0);\n  };\n\n  return (\n    <>\n      <CModal fullscreen visible={visible} onClose={() => setVisible(false)}>\n        <CModalHeader\n          closeButton={false}\n          style={{ display: \"block\", padding: \"0\" }}\n        >\n          <Stepper\n            steps={[\n              { label: \"Source\" },\n              { label: \"Destainataire\" },\n              { label: \"confirmation\" },\n            ]}\n            activeStep={step}\n          />\n        </CModalHeader>\n        <CModalBody>\n          {step === 0 && <Step0 step={step} setStep={setStep} />}\n          {step === 1 && <Step1 step={step} setStep={setStep} />}\n          {step === 2 && (\n            <Step2\n              setStep={setStep}\n              dataSource={dataSource}\n              dataDestination={dataDestination}\n              transferInfo={transferInfo}\n            />\n          )}\n        </CModalBody>\n        <CModalFooter>\n          <div>\n            <CButton color=\"secondary\" onClick={() => closeModal()}>\n              Close\n            </CButton>\n          </div>\n          <div>\n            <NextStepFooter step={step} setStep={setStep} />\n          </div>\n        </CModalFooter>\n      </CModal>\n    </>\n  );\n};\n\nexport default ModalTransfer;\n","export default __webpack_public_path__ + \"static/media/e-banking-ensa.dbf4892b.svg\";","import React, { useState, memo } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  CSidebar,\n  CSidebarBrand,\n  CSidebarNav,\n  CSidebarToggler,\n  CButton,\n  CModal,\n  CModalHeader,\n  CModalTitle,\n  CModalBody,\n  CModalFooter,\n} from \"@coreui/react\";\nimport { AppSidebarNav } from \"./AppSidebarNav\";\nimport SimpleBar from \"simplebar-react\";\nimport \"simplebar/dist/simplebar.min.css\";\n\nimport navigation from \"../_nav\";\nimport { Link } from \"react-router-dom\";\nimport ModalTransfer from \"src/views/transfer/ModalTransfer\";\nimport classNames from \"classnames\";\nimport { SET_TRANSFERT_INFO } from \"src/actions/types\";\nimport EbankingLogo from 'src/assets/e-banking-ensa.svg'\n\nconst AppSidebar = () => {\n  const dispatch = useDispatch();\n  const [visible, setVisible] = useState(false);\n \n  const { sidebarShow, sidebarUnfoldable } = useSelector(\n    (state) => state[\"userReducer\"]\n  );\n\n  return (\n    <>\n      <CSidebar\n        position=\"fixed\"\n        unfoldable={sidebarUnfoldable}\n        visible={sidebarShow}\n        onVisibleChange={(visible) => {\n          dispatch({ type: \"set\", sidebarShow: visible });\n        }}\n      >\n        <CSidebarBrand className=\"d-none d-md-flex\" to=\"/\">\n          <Link to=\"/\">\n            <img\n              src={EbankingLogo}\n              style={{ height: \"3.5em\" }}\n              alt=\"banking-logo\"\n            />\n          </Link>\n        </CSidebarBrand>\n        <CSidebarNav>\n          <SimpleBar>\n            <div className=\"text-center py-3\">\n              <CButton\n                color=\"primary\"\n                className=\"cursor-pointer text-center  px-5\"\n                onClick={() => setVisible(true)}\n              >\n                Transfer Money\n              </CButton>\n            </div>\n            <AppSidebarNav items={navigation} />\n          </SimpleBar>\n        </CSidebarNav>\n        <CSidebarToggler\n          className=\"d-none d-lg-flex\"\n          onClick={() => dispatch({ type: \"set\", payload: sidebarShow })}\n        />\n      </CSidebar>\n\n      <TypeTransfer visible={visible} setVisible={setVisible} />\n    </>\n  );\n};\n\nexport default memo(AppSidebar);\n\nconst TypeTransfer = ({ visible, setVisible }) => {\n\n  const dispatch = useDispatch();\n\n  const [types, setTypes] = useState([\n    { id: 1, label: \"Compte to Compte\", default: true },\n    { id: 2, label: \"Cash to Compte\", default: false },\n    { id: 3, label: \"Cash to Cash\", default: false },\n  ]);\n\n  const [visibleFullScreen, setVisibleFullScreen] = useState(false);\n  const [step, setStep] = useState(0);\n\n  const changeTypeHandler=(type )=>{\n      const myTypes = types.map((el) =>\n        el.id === type.id ? { ...el, default: true } : { ...el, default:false }\n      );\n      setTypes(myTypes);\n  }\n\n  const nextByType = ( )=>{\n    const selectedType= types.find((el) => el.default)\n    dispatch({\n      type: SET_TRANSFERT_INFO,\n      payload: { field: \"operationType\", value: selectedType.label },\n    });\n    if(selectedType  && selectedType.label === 'Compte to Compte' ){\n\n      setVisibleFullScreen(true)\n    }   \n  }\n\n\n  return (\n    <>\n      <CModal visible={visible} onClose={() => setVisible(false)}>\n        <CModalHeader>\n          <CModalTitle> Type d&#39;operation </CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <ul className=\"list-group\">\n            {types &&\n              types.length > 0 &&\n              types.map((item) => (\n                <li\n                  key={item.id}\n                  className={classNames(\"list-group-item cursor-pointer\", {\n                    active: item.default,\n                  })}\n                  onClick={() => changeTypeHandler(item)}\n                >\n                  {item.label}\n                </li>\n              ))}\n          </ul>\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"success\" onClick={() => nextByType()}>\n            Suivant\n          </CButton>\n        </CModalFooter>\n      </CModal>\n\n      <ModalTransfer\n        visible={visibleFullScreen}\n        setVisible={setVisibleFullScreen}\n        step={step}\n        setStep={setStep}\n      />\n    </>\n  );\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchCardsNotAccepted } from \"src/actions/cardActions\";\nimport { getListTransfersAction } from \"src/actions/transfertActions\";\nimport { fetchAllUsers } from \"src/actions/userActions\";\nimport { getListAgenciesAction } from \"src/actions/agencyAction\";\nimport {\n  AppContent,\n  AppSidebar,\n  AppFooter,\n  AppHeader,\n} from \"../components/index\";\n\nconst DefaultLayout = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchAllUsers());\n    dispatch(fetchCardsNotAccepted());\n    dispatch(getListTransfersAction());\n    dispatch(getListAgenciesAction());\n  }, []);\n\n  return (\n    <div>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-light\">\n        <AppHeader />\n        <div className=\"body flex-grow-1 px-3\">\n          <AppContent />\n        </div>\n        <AppFooter />\n      </div>\n    </div>\n  );\n};\n\nexport default DefaultLayout;\n"],"sourceRoot":""}
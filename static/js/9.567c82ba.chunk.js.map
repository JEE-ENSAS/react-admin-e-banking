{"version":3,"sources":["services/index.js","http-common.js","helpers/SweetAlert.js","services/auth.service.js","actions/authAction.js","views/pages/register/Register.js"],"names":["AUTH_URL","CLIENT_USER_URL","ACCOUNT_URL","CARD_URL","SETTING_URL","TRANSFERT_CLIENT_URL","TRANSFERT_AGENT_URL","AGENCY_URL","instance","axios","create","baseURL","headers","interceptors","request","use","config","token","JSON","parse","localStorage","getItem","error","Promise","reject","showSuccessSwal","title","timer","icon","includes","Swal","fire","position","showConfirmButton","login","async","data","http","post","loginForm","register","registerForm","loginAction","AuthService","dispatch","type","ERROR_ACTION","payload","resolve","user","id","username","email","roles","AUTH_LOGIN","accessToken","setItem","stringify","err","registerAction","AUTH_REGISTER","message","logOutAction","AUTH_LOGOUT","Register","useDispatch","history","useHistory","setRegisterForm","useState","password","repassword","className","md","lg","xl","cilUser","placeholder","autoComplete","value","onChange","e","target","cilLockLocked","color","onClick","preventDefault","response","push","signUp"],"mappings":"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","file":"static/js/9.567c82ba.chunk.js","sourcesContent":["export const AUTH_URL =\n  \"https://my-authentication-service-t.herokuapp.com/api/auth/\";\nexport const CLIENT_USER_URL =\n  \"https://my-client-service-t.herokuapp.com/api/users/\";\nexport const ACCOUNT_URL = \n\"https://my-account-service-tt.herokuapp.com/Account/\";\nexport const CARD_URL = \n\"https://my-card-service-ttt.herokuapp.com/Card/\";\nexport const SETTING_URL =\n  \"https://my-setting-service-t.herokuapp.com/Parameter/\";\nexport const TRANSFERT_CLIENT_URL =\n  \"https://transfer-client-service-t.herokuapp.com/transfer-client/\";\nexport const TRANSFERT_AGENT_URL =\n  \"https://transfer-client-service-t.herokuapp.com/transfer-client/\"; \n  export const AGENCY_URL = \n  \"https://my-agency-service-tt.herokuapp.com/Agency/\";\n ","import axios from \"axios\";\n\nconst baseURL = \"https://my-api-gateway-ttt.herokuapp.com/\"\nconst instance = axios.create({\n  baseURL,\n  headers: {\n    \"Content-type\": \"application/json\",\n  },\n});\n\ninstance.interceptors.request.use(\n  (config) => {\n    const token = JSON.parse(localStorage.getItem(\"token\"));\n    if (token) {\n      config.headers[\"Authorization\"] = \"Bearer \" + token;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\n\nexport default instance;\n","import Swal from 'sweetalert2';\n\nexport const showSuccessSwal = ({ title = 'Your work has been saved', timer = 1500 }) => {\n    const icon = title.includes(\"Error\") ? \"error\" : \"success\";\n    Swal.fire({\n      position: \"top-end\",\n      icon,\n      title,\n      timer,\n      showConfirmButton: false,\n    });\n\n}\n","import { AUTH_URL } from \".\";\nimport http from \"../http-common\";\n\n class AuthService {\n  login = async (loginForm) => {\n    const { data, error } = await http.post(AUTH_URL + 'signin', loginForm);\n    return { data, error };\n  };\n  \n  \n  register = async (registerForm) => { \n    const { data, error } = await http.post(AUTH_URL+'signup' , registerForm);\n    return { data, error };\n  }\n\n\n}\n\nexport default new AuthService();\n","import { AUTH_LOGIN, AUTH_LOGOUT, AUTH_REGISTER, ERROR_ACTION } from \"./types\";\nimport AuthService from \"../services/auth.service\";\nimport { showSuccessSwal } from \"../helpers/SweetAlert\";\n\nexport const loginAction = (loginForm) => async (dispatch) => {\n  try {\n    const { data, error } = await AuthService.login(loginForm);\n    if (error) {\n      dispatch({\n        type: ERROR_ACTION,\n        payload: data,\n      });\n      return Promise.resolve(error);\n    } else {\n      const user = {\n        id: data.id,\n        username: data.username,\n        email: data.email,\n        roles: data.roles,\n      }\n      dispatch({\n        type: AUTH_LOGIN,\n        payload: { user, token: data.accessToken },\n      }); \n      localStorage.setItem(\"user\", JSON.stringify(user));\n      localStorage.setItem(\"token\", JSON.stringify(data.accessToken));\n      showSuccessSwal({ title: `you're log in ` })\n      return Promise.resolve(data);\n    }\n  } catch (err) {\n    return Promise.reject(err);\n  }\n};\n\n\nexport const registerAction = (registerForm) => async (dispatch) => {\n  try {\n    const { data, error } = await AuthService.register(registerForm);\n    if (error) {\n      dispatch({\n        type: ERROR_ACTION,\n        payload: error,\n      });\n      return Promise.resolve(error);\n    } else {\n      dispatch({\n        type: AUTH_REGISTER,\n        payload: data,\n      });\n      showSuccessSwal({ title: data.message })\n\n      return Promise.resolve(data);\n    }\n  } catch (err) {\n    dispatch({\n      type: ERROR_ACTION,\n      payload: err.message,\n    });\n    return Promise.reject(err);\n  }\n}\n\n\nexport const logOutAction = () => (dispatch) => {\n\n  dispatch({ type: AUTH_LOGOUT, payload: {} })\n\n}","import React, { useState } from \"react\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport { cilLockLocked, cilUser } from \"@coreui/icons\";\nimport { useDispatch } from \"react-redux\";\nimport { registerAction } from \"../../../actions/authAction\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Register = () => {\n  const dispatch = useDispatch();\n\n  const history = useHistory();\n\n  const [registerForm, setRegisterForm] = useState({\n    username: \"\",\n    password: \"\",\n    repassword: \"\",\n    email: \"\",\n  });\n\n  const signUp = async (e) => {\n    e.preventDefault();\n    const response = await dispatch(\n      registerAction({ ...registerForm, roles: [\"agent\"] })\n    );\n    if (response && response.message) {\n      history.push(\"/login\");\n    }\n  };\n\n  return (\n    <div className=\"bg-light min-vh-100 d-flex flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md={9} lg={7} xl={6}>\n            <CCard className=\"mx-4\">\n              <CCardBody className=\"p-4\">\n                <CForm>\n                  <h1>Register</h1>\n                  <p className=\"text-medium-emphasis\">Create your account</p>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <CIcon icon={cilUser} />\n                    </CInputGroupText>\n                    <CFormInput\n                      placeholder=\"Username\"\n                      autoComplete=\"username\"\n                      value={registerForm.username}\n                      onChange={(e) =>\n                        setRegisterForm({\n                          ...registerForm,\n                          username: e.target.value,\n                        })\n                      }\n                    />\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>@</CInputGroupText>\n                    <CFormInput\n                      placeholder=\"Email\"\n                      autoComplete=\"email\"\n                      value={registerForm.email}\n                      onChange={(e) =>\n                        setRegisterForm({\n                          ...registerForm,\n                          email: e.target.value,\n                        })\n                      }\n                    />\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <CIcon icon={cilLockLocked} />\n                    </CInputGroupText>\n                    <CFormInput\n                      type=\"password\"\n                      placeholder=\"Password\"\n                      autoComplete=\"new-password\"\n                      value={registerForm.password}\n                      onChange={(e) =>\n                        setRegisterForm({\n                          ...registerForm,\n                          password: e.target.value,\n                        })\n                      }\n                    />\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-4\">\n                    <CInputGroupText>\n                      <CIcon icon={cilLockLocked} />\n                    </CInputGroupText>\n                    <CFormInput\n                      type=\"password\"\n                      placeholder=\"Repeat password\"\n                      autoComplete=\"new-password\"\n                      value={registerForm.repassword}\n                      onChange={(e) =>\n                        setRegisterForm({\n                          ...registerForm,\n                          repassword: e.target.value,\n                        })\n                      }\n                    />\n                  </CInputGroup>\n                  <div className=\"d-grid\">\n                    <CButton color=\"success\" onClick={(e) => signUp(e)}>\n                      Create Account\n                    </CButton>\n                  </div>\n                </CForm>\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  );\n};\n\nexport default Register;\n"],"sourceRoot":""}
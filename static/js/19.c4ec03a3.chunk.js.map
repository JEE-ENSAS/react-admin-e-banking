{"version":3,"sources":["views/cards/CardForm.js"],"names":["CardForm","history","useHistory","accountState","useSelector","state","list","setList","useState","allAccounts","cardFields","setCardFields","accountId","cardNumber","csv","dateExpiration","type","dispatch","useDispatch","onChangeCardHandler","e","field","target","value","useEffect","getListAccountsAction","length","id","className","onChange","map","item","accountNumber","placeholder","onClick","async","validateCardFields","parseInt","createCardAction","Swal","fire","title","text","icon","confirmButtonText","push","pathname","err","message","creatCard"],"mappings":"+GAAA,+EA2IeA,UApIf,WACE,MAAMC,EAAUC,cACVC,EAAeC,aAAaC,GAAUA,EAAK,kBAC1CC,EAAMC,GAAWC,mBAASL,EAAaM,cACvCC,EAAYC,GAAiBH,mBAAS,CAC3CI,UAAW,GACXC,WAAY,GACZC,IAAK,GACLC,eAAgB,GAChBC,KAAM,eAGFC,EAAWC,cAEXC,EAAsB,CAACC,EAAGC,KAC9BV,EAAc,IAAKD,EAAY,CAACW,GAAQD,EAAEE,OAAOC,SA4CnD,OAzCAC,qBAAU,KACRP,EAASQ,iBACR,IAEHD,qBAAU,KACRjB,EAAQ,IAAIJ,EAAaM,cACzBE,EAAc,IACTD,EACHE,UACET,EAAaM,YAAYiB,OAAS,EAC9BvB,EAAaM,YAAY,GAAGkB,GAC5B,OAEP,CAACxB,EAAaM,cA6Bf,sBAAKmB,UAAU,OAAf,UACE,sBAAKA,UAAU,0BAAf,UACE,mBAAGA,UAAU,oBADf,kBAIA,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,aAAf,UACE,6DACA,wBACEA,UAAU,eACVL,MAAOb,EAAWE,UAClBiB,SAAWT,GAAMD,EAAoBC,EAAG,aAH1C,SAKGd,EAAKwB,KAAKC,GACT,wBAAQR,MAAOQ,EAAKJ,GAApB,SACGI,EAAKC,eADqBD,EAAKJ,WAMxC,uBACA,qBAAKC,UAAU,aAAf,SACE,uBACEZ,KAAK,OACLY,UAAU,eACVK,YAAY,cACZV,MAAOb,EAAWG,WAClBgB,SAAWT,GAAMD,EAAoBC,EAAG,kBAG5C,uBACA,qBAAKQ,UAAU,aAAf,SACE,uBACEZ,KAAK,OACLY,UAAU,eACVK,YAAY,OACZV,MAAOb,EAAWI,IAClBe,SAAWT,GAAMD,EAAoBC,EAAG,WAG5C,uBACA,qBAAKQ,UAAU,aAAf,SACE,uBACEZ,KAAK,OACLY,UAAU,eACVK,YAAY,iBACZV,MAAOb,EAAWK,eAClBc,SAAWT,GAAMD,EAAoBC,EAAG,sBAG5C,uBACA,sBAAKQ,UAAU,aAAf,UACE,uDACA,yBACEA,UAAU,eACVL,MAAOb,EAAWM,KAClBa,SAAWT,GAAMD,EAAoBC,EAAG,QAH1C,UAKE,wBAAQG,MAAO,aAAf,wBACA,wBAAQA,MAAO,OAAf,kBACA,wBAAQA,MAAO,UAAf,2BAGJ,uBACA,wBAAQK,UAAU,yBAAyBM,QAAS,IA3FxCC,WAChB,IACE,MAAMC,EAAqB,IACtB1B,EACHI,IAAKuB,SAAS3B,EAAWI,aAETG,EAASqB,YAAiBF,KACrC,KACLG,IAAKC,KAAK,CACRC,MAAO,SACPC,KAAM,0BACNC,KAAM,UACNC,kBAAmB,OAErB3C,EAAQ4C,KAAK,CAAEC,SAAU,YAE3B,MAAOC,GACPR,IAAKC,KAAK,CACRC,MAAO,aACPC,KAAM,2BAA6BK,EAAIC,QACvCL,KAAM,QACNC,kBAAmB,SAsEuCK,GAA1D","file":"static/js/19.c4ec03a3.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { getListAccountsAction } from \"../../actions/accountAction\";\nimport Swal from \"sweetalert2\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createCardAction } from \"src/actions/cardActions\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction CardForm() {\n  const history = useHistory();\n  const accountState = useSelector((state) => state[\"accountReducer\"]);\n  const [list, setList] = useState(accountState.allAccounts);\n  const [cardFields, setCardFields] = useState({\n    accountId: \"\",\n    cardNumber: \"\",\n    csv: \"\",\n    dateExpiration: \"\",\n    type: \"MASTERCARD\",\n  });\n\n  const dispatch = useDispatch();\n\n  const onChangeCardHandler = (e, field) => {\n    setCardFields({ ...cardFields, [field]: e.target.value });\n  };\n\n  useEffect(() => {\n    dispatch(getListAccountsAction());\n  }, []);\n\n  useEffect(() => {\n    setList([...accountState.allAccounts]);\n    setCardFields({\n      ...cardFields,\n      accountId:\n        accountState.allAccounts.length > 0\n          ? accountState.allAccounts[0].id\n          : \"\",\n    });\n  }, [accountState.allAccounts]);\n\n  const creatCard = async () => {\n    try {\n      const validateCardFields = {\n        ...cardFields,\n        csv: parseInt(cardFields.csv),\n      };\n      const res = await dispatch(createCardAction(validateCardFields));\n      if (res[\"id\"]) {\n        Swal.fire({\n          title: \"Saved!\",\n          text: \"New card has been saved\",\n          icon: \"success\",\n          confirmButtonText: \"Ok\",\n        });\n        history.push({ pathname: \"/cards\" });\n      }\n    } catch (err) {\n      Swal.fire({\n        title: \"Try again!\",\n        text: \"Card has not been saved:\" + err.message,\n        icon: \"error\",\n        confirmButtonText: \"Ok\",\n      });\n    }\n  };\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-header text-center\">\n        <i className=\"fa fa-plus mx-1\"></i>\n        Add New Card\n      </div>\n      <div className=\"card-body\">\n        <div className=\"form-group\">\n          <label>Select Account Number : </label>\n          <select\n            className=\"form-control\"\n            value={cardFields.accountId}\n            onChange={(e) => onChangeCardHandler(e, \"accountId\")}\n          >\n            {list.map((item) => (\n              <option value={item.id} key={item.id}>\n                {item.accountNumber}\n              </option>\n            ))}\n          </select>\n        </div>\n        <br></br>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"cardNumber \"\n            value={cardFields.cardNumber}\n            onChange={(e) => onChangeCardHandler(e, \"cardNumber\")}\n          />\n        </div>\n        <br></br>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"csv \"\n            value={cardFields.csv}\n            onChange={(e) => onChangeCardHandler(e, \"csv\")}\n          />\n        </div>\n        <br></br>\n        <div className=\"form-group\">\n          <input\n            type=\"date\"\n            className=\"form-control\"\n            placeholder=\"dateExpiration\"\n            value={cardFields.dateExpiration}\n            onChange={(e) => onChangeCardHandler(e, \"dateExpiration\")}\n          />\n        </div>\n        <br></br>\n        <div className=\"form-group\">\n          <label>Select Card Type :</label>\n          <select\n            className=\"form-control\"\n            value={cardFields.type}\n            onChange={(e) => onChangeCardHandler(e, \"type\")}\n          >\n            <option value={\"MASTERCARD\"}>MASTERCARD</option>\n            <option value={\"VISA\"}>VISA</option>\n            <option value={\"VIRTUAL\"}>VIRTUAL</option>\n          </select>\n        </div>\n        <br></br>\n        <button className=\"btn btn-sm btn-primary\" onClick={() => creatCard()}>\n          Add Card\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default CardForm;\n"],"sourceRoot":""}
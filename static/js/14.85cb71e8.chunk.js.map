{"version":3,"sources":["services/AccountService.js","views/accounts/AccountForm.js"],"names":["baseURL","updateURL","getAccount","id","fetch","then","data","json","enabledAccount","requestOptions","method","headers","body","JSON","stringify","response","Swal","fire","disabledAccount","AccountForm","require","history","useHistory","accountNumber","useRef","balance","currency","userId","type","clientState","useSelector","state","list","setList","useState","useEffect","users","className","map","item","ref","value","username","placeholder","onClick","async","current","creationDate","Date","res","ok","message","status","statusText","Error","title","text","icon","confirmButtonText","push","pathname","err"],"mappings":"+GAAA,gMAEO,MAAMA,EACX,6DAEWC,EACX,6DAEK,SAASC,EAAWC,GACzB,OAAOC,MACL,8DAAgED,GAChEE,MAAMC,GAASA,EAAKC,SAEjB,SAASC,EAAeL,GAC7B,MAAMM,EAAiB,CACrBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAEX,GAAIA,KAE7BC,MACE,6DACAK,GACAJ,MAAMU,GAAaA,EAASR,SAE9BS,IAAKC,KAAK,WAAY,GAAI,WAGrB,SAASC,EAAgBf,GAC9B,MAAMM,EAAiB,CACrBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAEX,GAAIA,KAE7BC,MACE,8DACAK,GACAJ,MAAMU,GAAaA,EAASR,SAE9BS,IAAKC,KAAK,YAAa,GAAI,a,iCCtC7B,oDA+HeE,UA1Hf,WACE,MAAMH,EAAOI,EAAQ,KACfC,EAAUC,cACVC,EAAgBC,iBAAO,MACvBC,EAAUD,iBAAO,MACjBE,EAAWF,iBAAO,MAClBG,EAASH,iBAAO,MAChBI,EAAOJ,iBAAO,MAEdK,EAAcC,aAAYC,GAAQA,EAAK,eACtCC,EAAMC,GAAWC,mBAAS,IAkDjC,OAhDAC,qBAAU,KACRF,EAAQ,IAAIJ,EAAYO,UACvB,CAACP,EAAYO,QA+Cd,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,0BAAf,6BACA,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,aAAf,UACE,mDACA,wBAAQA,UAAU,eAAlB,SACGL,EAAKM,KAAKC,GACT,wBAAQC,IAAKb,EAAQc,MAAOF,EAAKpC,GAAjC,SACGoC,EAAKG,UADkCH,EAAKpC,WAMrD,uBACA,qBAAKkC,UAAU,aAAf,SACE,uBACET,KAAK,OACLS,UAAU,eACVG,IAAKjB,EACLoB,YAAY,oBAGhB,uBACA,qBAAKN,UAAU,aAAf,SACE,uBACET,KAAK,OACLS,UAAU,eACVG,IAAKf,EACLkB,YAAY,eAGhB,uBACA,qBAAKN,UAAU,aAAf,SACE,uBACET,KAAK,OACLS,UAAU,eACVG,IAAKd,EACLiB,YAAY,gBAGhB,uBACA,sBAAKN,UAAU,aAAf,UACE,0DACA,yBAAQA,UAAU,eAAlB,UACE,wBAAQG,IAAKZ,EAAMa,MAAO,SAA1B,oBAGA,wBAAQD,IAAKZ,EAAMa,MAAO,SAA1B,0BAKJ,uBACA,wBAAQJ,UAAU,yBAAyBO,QAjGjDC,iBACE,IACE,MAAMvC,EAAO,CACXiB,cAAeA,EAAcuB,QAAQL,MACrChB,QAASA,EAAQqB,QAAQL,MACzBM,aAAc,IAAIC,KAClBtB,SAAUA,EAASoB,QAAQL,MAC3Bb,KAAMA,EAAKkB,QAAQL,MACnBd,OAAQA,EAAOmB,QAAQL,OAGnBQ,QAAY7C,MAAMJ,IAAS,CAC/BU,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUR,KAGvB,IAAK2C,EAAIC,GAAI,CACX,MAAMC,EAAO,gCAA4BF,EAAIG,OAAhC,cAA4CH,EAAII,YAC7D,MAAM,IAAIC,MAAMH,GAGlBnC,EAAKC,KAAK,CACRsC,MAAO,SACPC,KAAM,6BACNC,KAAM,UACNC,kBAAmB,OAErBrC,EAAQsC,KAAK,CACXC,SAAU,cAEZ,MAAOC,GACP7C,EAAKC,KAAK,CACRsC,MAAO,aACPC,KAAM,8BAAgCK,EAAIV,QAC1CM,KAAM,OACNC,kBAAmB,SA2DnB","file":"static/js/14.85cb71e8.chunk.js","sourcesContent":["import Swal from \"sweetalert2\";\n \nexport const baseURL =\n  \"https://my-account-service-tt.herokuapp.com/Account/create\";\n\nexport const updateURL =\n  \"https://my-account-service-tt.herokuapp.com/Account/update\";\n\nexport function getAccount(id) {\n  return fetch(\n    \"https://my-account-service-tt.herokuapp.com/Account/get?id=\" + id\n  ).then((data) => data.json());\n}\nexport function enabledAccount(id) {\n  const requestOptions = {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ id: id }),\n  };\n  fetch(\n    \"https://my-account-service-tt.herokuapp.com/Account/enable\",\n    requestOptions\n  ).then((response) => response.json());\n\n  Swal.fire(\"Enabled!\", \"\", \"success\");\n}\n\nexport function disabledAccount(id) {\n  const requestOptions = {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ id: id }),\n  };\n  fetch(\n    \"https://my-account-service-tt.herokuapp.com/Account/disable\",\n    requestOptions\n  ).then((response) => response.json());\n\n  Swal.fire(\"Disabled!\", \"\", \"success\");\n}\n","import React, { useRef, useState, useEffect } from \"react\";\nimport {  baseURL } from \"../../services/AccountService\";\n\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nfunction AccountForm() {\n  const Swal = require(\"sweetalert2\");\n  const history = useHistory();\n  const accountNumber = useRef(null);\n  const balance = useRef(null);\n  const currency = useRef(null);\n  const userId = useRef(null);\n  const type = useRef(null);\n \n  const clientState = useSelector(state=> state['userReducer'] )\n  const [list, setList] = useState([]);\n\n  useEffect(() => {\n    setList([...clientState.users]);\n  }, [clientState.users]);\n\n\n  async function postData() {\n    try {\n      const data = {\n        accountNumber: accountNumber.current.value,\n        balance: balance.current.value,\n        creationDate: new Date(),\n        currency: currency.current.value,\n        type: type.current.value,\n        userId: userId.current.value,\n      };\n\n      const res = await fetch(baseURL, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      });\n\n      if (!res.ok) {\n        const message = `An error has occured: ${res.status} - ${res.statusText}`;\n        throw new Error(message);\n      }\n\n      Swal.fire({\n        title: \"Saved!\",\n        text: \"New account has been added\",\n        icon: \"success\",\n        confirmButtonText: \"Ok\",\n      });\n      history.push({\n        pathname: \"/accounts\",\n      });\n    } catch (err) {\n      Swal.fire({\n        title: \"Try again!\",\n        text: \"Account has not been saved:\" + err.message,\n        icon: \"info\",\n        confirmButtonText: \"Ok\",\n      });\n    }\n  }\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-header text-center\">Add New Account</div>\n      <div className=\"card-body\">\n        <div className=\"form-group\">\n          <label>Select User : </label>\n          <select className=\"form-control\">\n            {list.map((item) => (\n              <option ref={userId} value={item.id} key={item.id}>\n                {item.username}\n              </option>\n            ))}\n          </select>\n        </div>\n        <br></br>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            ref={accountNumber}\n            placeholder=\"accountNumber\"\n          />\n        </div>\n        <br></br>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            ref={balance}\n            placeholder=\"balance \"\n          />\n        </div>\n        <br></br>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            ref={currency}\n            placeholder=\"currency \"\n          />\n        </div>\n        <br></br>\n        <div className=\"form-group\">\n          <label>Select Account Type :</label>\n          <select className=\"form-control\">\n            <option ref={type} value={\"SAVING\"}>\n              SAVING\n            </option>\n            <option ref={type} value={\"NORMAL\"}>\n              NORMAL\n            </option>\n          </select>\n        </div>\n        <br></br>\n        <button className=\"btn btn-sm btn-primary\" onClick={postData}>\n          Add Account\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default AccountForm;\n"],"sourceRoot":""}
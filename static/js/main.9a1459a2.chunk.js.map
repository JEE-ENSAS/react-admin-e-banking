{"version":3,"sources":["actions/types.js","App.js","serviceWorker.js","reducers/authReducer.js","reducers/userReducer.js","reducers/transferReducer.js","reducers/accountReducer.js","reducers/cardReducer.js","reducers/agencyReducer.js","reducers/index.js","store.js","index.js"],"names":["ERROR_ACTION","AUTH_REGISTER","AUTH_LOGIN","AUTH_LOGOUT","FETCH_USERS","FETCH_USER","UPDATE_USER","ENABLE_USER","DISABLE_USER","SET_DATA_SOURCE","SET_DATA_DESTINATAIRE","SET_TRANSFERT_INFO","FETCH_TRANSFETS","CREATE_TRANSFER","FETCH_ACCOUNTS_BY_USER","SET_SELECTED_ACCOUNT","FETCH_ALL_ACCOUNTS","FETCH_AGENCIES","CREATE_AGENCY","FETCH_CARDS_BY_ACCOUNT_ID","SET_SELECTED_CARD","FETCH_CARDS_NOT_ACCEPTED","ACCEPT_CARD","CREATE_CARD","UPDATE_CARD","DETAILS_CARD","ENABLE_DISABLE_CARD","loading","className","DefaultLayout","React","lazy","Login","Register","Page404","Page500","App","Component","render","Suspense","fallback","exact","path","name","props","Boolean","window","location","hostname","match","user","JSON","parse","localStorage","getItem","token","isAuthenticated","initialState","error","message","authReducer","state","action","type","payload","users","sidebarShow","sidebarUnfoldable","userReducer","dataSource","client","compte","dataDestination","transferInfo","soustraction","price","motif","operationType","transfers","tranferReducer","allAccounts","accountsByUser","account","accountReducer","map","id","cardsByUser","card","cardDetails","cardsNotAccepted","cardReducer","cards","el","enabled","filter","agencies","agencyReducer","combineReducers","transferReducer","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9a1459a2.chunk.js","sourcesContent":["// ERROR ACTION\nexport const ERROR_ACTION = \"ERROR_ACTION\";\n\n// LOGIN ACTIONS\nexport const AUTH_REGISTER = \"AUTH_REGISTER\";\nexport const AUTH_LOGIN = \"AUTH_LOGIN\";\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\n\n\n// USER ACTIONS\nexport const FETCH_USERS = \"FETCH_USERS\";\nexport const FETCH_USER = \"FETCH_USER\";\nexport const UPDATE_USER = \"UPDATE_USER\";\nexport const ENABLE_USER = \"ENABLE_USER\";\nexport const DISABLE_USER = \"DISABLE_USER\";\n\n\n\n// TRANSFERT ACTIONS\nexport const SET_DATA_SOURCE = \"SET_DATA_SOURCE\";\nexport const SET_DATA_DESTINATAIRE = \"SET_CLIENT_DESTINATAIRE\";\nexport const SET_TRANSFERT_INFO = \"SET_TRANSFERT_INFO\";\nexport const SET_OPERATION_TYPE = \"SET_OPERATION_TYPE\";\nexport const FETCH_TRANSFETS = \"FETCH_TRANSFETS\";\nexport const CREATE_TRANSFER = \"CREATE_TRANSFER\";\n\n\n\n// ACCOUNt ACTIONS\nexport const FETCH_ACCOUNTS_BY_USER = \"FETCH_ACCOUNTS_BY_USER\";\nexport const SET_SELECTED_ACCOUNT = \"SET_SELECTED_ACCOUNT\";\nexport const FETCH_ALL_ACCOUNTS = \"FETCH_ALL_ACCOUNTS\";\n\n// AGENCY ACTIONS\nexport const FETCH_AGENCY_BY_ID = \"FETCH_AGENCY_BY_ID\";\nexport const FETCH_AGENCIES = \"FETCH_AGENCIES\";\nexport const CREATE_AGENCY = \"CREATE_AGENCY\";\n\n\n// CARDS ACTIONS\nexport const FETCH_CARDS_BY_ACCOUNT_ID = \"FETCH_CARDS_BY_ACCOUNT_ID\";\nexport const SET_SELECTED_CARD = \"SET_SELECTED_CARD\";\nexport const FETCH_CARDS_NOT_ACCEPTED = \"FETCH_CARDS_NOT_ACCEPTED\";\nexport const ACCEPT_CARD = \"ACCEPT_CARD\";\nexport const CREATE_CARD = \"CREATE_CARD\";\nexport const UPDATE_CARD = \"UPDATE_CARD\";\nexport const DETAILS_CARD = \"DETAILS_CARD\";\nexport const ENABLE_DISABLE_CARD = \"ENABLE_DISABLE_CARD\";","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./scss/style.scss\";\n\nconst loading = (\n  <div className=\"pt-3 text-center\">\n    <div className=\"sk-spinner sk-spinner-pulse\"></div>\n  </div>\n);\n\n// Containers\nconst DefaultLayout = React.lazy(() => import(\"./layout/DefaultLayout\"));\n\n// Pages\nconst Login = React.lazy(() => import(\"./views/pages/login/Login\"));\nconst Register = React.lazy(() => import(\"./views/pages/register/Register\"));\nconst Page404 = React.lazy(() => import(\"./views/pages/page404/Page404\"));\nconst Page500 = React.lazy(() => import(\"./views/pages/page500/Page500\"));\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <React.Suspense fallback={loading}>\n          <Switch>\n            <Route\n              exact\n              path=\"/login\"\n              name=\"Login Page\"\n              render={(props) => <Login {...props} />}\n            />\n            <Route\n              exact\n              path=\"/register\"\n              name=\"Register Page\"\n              render={(props) => <Register {...props} />}\n            />\n            <Route\n              exact\n              path=\"/404\"\n              name=\"Page 404\"\n              render={(props) => <Page404 {...props} />}\n            />\n            <Route\n              exact\n              path=\"/500\"\n              name=\"Page 500\"\n              render={(props) => <Page500 {...props} />}\n            />\n            <Route\n              path=\"/\"\n              name=\"Home\"\n              render={(props) => <DefaultLayout {...props} />}\n            />\n          </Switch>\n        </React.Suspense>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ',\n          )\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.')\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister()\n    })\n  }\n}\n","import { AUTH_LOGIN, AUTH_LOGOUT, AUTH_REGISTER, ERROR_ACTION } from \"../actions/types\";\n\nconst user = JSON.parse(localStorage.getItem(\"user\")) || null;\nconst token = JSON.parse(localStorage.getItem(\"token\")) || null;\n\nconst isAuthenticated = !!(user && token);\n\nconst initialState = {\n  isAuthenticated: isAuthenticated,\n  user: isAuthenticated ? user : null,\n  token: isAuthenticated ? token : null,\n  error: \"\",\n  message: \"\"\n};\n\nfunction authReducer(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case AUTH_LOGIN:\n      return {\n        ...state,\n        user: payload.user,\n        token: payload.token,\n        isAuthenticated: true,\n        error: \"\",\n      };\n\n    case AUTH_REGISTER:\n      return {\n        ...state,\n        message: payload,\n      }\n\n    case AUTH_LOGOUT:\n      return {\n        isAuthenticated: false,\n        user: null,\n        token: null,\n        error: \"\",\n        message: \"\"\n      }\n\n    case ERROR_ACTION:\n      return {\n        ...state,\n        error: payload,\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default authReducer;\n","import { DISABLE_USER, ENABLE_USER, FETCH_USER, FETCH_USERS, UPDATE_USER } from \"../actions/types\";\n\nconst initialState = {\n  users: [],\n  user: {},\n  \n  sidebarShow: true,\n  sidebarUnfoldable: true,\n};\n\nconst userReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case FETCH_USERS:\n      return {\n        ...state,\n        users: payload[\"users\"],\n      };\n\n    case FETCH_USER:\n      return {\n        ...state,\n        user: payload[\"user\"],\n      };\n\n    case UPDATE_USER:\n      return {\n        ...state,\n        user: payload[\"user\"],\n      };\n\n    case ENABLE_USER:\n      return {\n        ...state,\n        user: payload[\"user\"],\n      };\n\n    case DISABLE_USER:\n      return {\n        ...state,\n        user: payload[\"user\"],\n      };\n\n    case \"set\":\n      return { ...state, sidebarShow: !payload, sidebarUnfoldable: false };\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import {\n  CREATE_TRANSFER,\n  FETCH_TRANSFETS,\n  SET_DATA_DESTINATAIRE,\n  SET_DATA_SOURCE,\n  SET_TRANSFERT_INFO,\n} from \"src/actions/types\";\n\nlet initialState = {\n  dataSource: { client: null, compte: null },\n  dataDestination: { client: null, compte: null },\n  transferInfo: {\n    soustraction: \"FROM_ME\",\n    price: 0,\n    motif: \"\",\n    operationType: \"\",\n  },\n\n  transfers: [],\n};\n\nconst tranferReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SET_DATA_SOURCE:\n      return {\n        ...state,\n        dataSource: { ...state.dataSource, ...payload },\n      };\n\n    case SET_DATA_DESTINATAIRE:\n      return {\n        ...state,\n        dataDestination: { ...state.dataDestination, ...payload },\n      };\n\n    case SET_TRANSFERT_INFO:\n      return {\n        ...state,\n        transferInfo: {\n          ...state.transferInfo,\n          [payload[\"field\"]]: payload[\"value\"],\n        },\n      };\n\n    case FETCH_TRANSFETS:\n      return { ...state, transfers: payload[\"items\"] };\n\n    case CREATE_TRANSFER : \n     return { ...state, transfers: [...state.transfers, payload[\"item\"]] };\n\n\n    default:\n      return state;\n  }\n};\n\nexport default tranferReducer;\n","import {\n  FETCH_ACCOUNTS_BY_USER,\n  SET_SELECTED_ACCOUNT,\n  FETCH_ALL_ACCOUNTS,\n} from \"src/actions/types\";\n\nconst initialState = {\n  allAccounts: [],\n  accountsByUser: [],\n  account: null,\n};\n\nconst accountReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case FETCH_ALL_ACCOUNTS:\n      return { ...state, allAccounts: [...payload] };\n\n    case FETCH_ACCOUNTS_BY_USER:\n      return { ...state, accountsByUser: payload };\n\n    case SET_SELECTED_ACCOUNT:\n      return {\n        ...state,\n        account: payload,\n        accountsByUser: state.accountsByUser.map((account) =>\n          account.id === payload.id ? { ...payload } : account\n        ),\n      };\n\n    default:\n      return { ...state };\n  }\n};\n\nexport default accountReducer;\n","import {\n  FETCH_CARDS_BY_ACCOUNT_ID,\n  SET_SELECTED_CARD,\n  FETCH_CARDS_NOT_ACCEPTED,\n  ACCEPT_CARD,\n  DETAILS_CARD,\n  UPDATE_CARD,\n  ENABLE_DISABLE_CARD,\n} from \"src/actions/types\";\n\nconst initialState = {\n  cardsByUser: [],\n  card: null,\n  cardDetails: null,\n  cardsNotAccepted: [],\n};\n\nconst cardReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n\n  let cards = [];\n  switch (type) {\n    case FETCH_CARDS_BY_ACCOUNT_ID:\n      return { ...state, cardsByUser: payload };\n\n    case FETCH_CARDS_NOT_ACCEPTED:\n      return { ...state, cardsNotAccepted: payload };\n\n    case SET_SELECTED_CARD:\n      return { ...state, card: payload };\n\n    case ENABLE_DISABLE_CARD:\n      cards = [];\n      cards = state.cardsNotAccepted.map((el) =>\n        el[\"id\"] === payload[\"id\"] ? { ...el, enabled: !el.enabled } : el\n      );\n      return { ...state, card: payload, cardsNotAccepted: cards };\n\n    case ACCEPT_CARD:\n      cards = [];\n      cards = state.cardsNotAccepted.filter(\n        (el) => el[\"cardNumber\"] !== payload[\"cardNumber\"]\n      );\n      return { ...state, cardsNotAccepted: cards };\n\n    case DETAILS_CARD:\n      return { ...state, cardDetails: payload };\n\n    case UPDATE_CARD:\n      cards = [];\n      cards = state.cardsNotAccepted.map((el) =>\n        el[\"cardNumber\"] === payload[\"cardNumber\"] ? { ...payload } : el\n      ); \n      return { ...state, cardDetails: payload };\n\n    default:\n      return { ...state };\n  }\n};\n\nexport default cardReducer;\n","import { FETCH_AGENCIES } from \"src/actions/types\";\n\nconst initialState = {\n  agencies: [],\n};\n\nconst agencyReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case FETCH_AGENCIES:\n      return { ...state, agencies: payload[\"items\"] };\n\n    default:\n      return { ...state };\n  }\n};\n\nexport default agencyReducer;\n","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducer\";\nimport userReducer from \"./userReducer\";\nimport transferReducer from \"./transferReducer\";\nimport accountReducer from \"./accountReducer\";\nimport cardReducer from \"./cardReducer\";\nimport agencyReducer from \"./agencyReducer\";\nexport default combineReducers({\n  authReducer,\n  userReducer,\n  transferReducer ,\n  accountReducer,\n  cardReducer,\n  agencyReducer\n});\n","import { createStore, applyMiddleware } from 'redux'\nimport rootReducer from \"./reducers\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\n\nconst middleware = [thunk];\n\nconst initialState = {}\n\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store","import 'react-app-polyfill/stable'\nimport 'core-js'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}
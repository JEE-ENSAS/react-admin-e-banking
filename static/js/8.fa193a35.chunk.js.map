{"version":3,"sources":["services/index.js","http-common.js","services/auth.service.js","helpers/SweetAlert.js","actions/authAction.js","views/pages/login/Login.js"],"names":["AUTH_URL","CLIENT_USER_URL","ACCOUNT_URL","CARD_URL","SETTING_URL","TRANSFERT_CLIENT_URL","TRANSFERT_AGENT_URL","AGENCY_URL","instance","axios","create","baseURL","headers","interceptors","request","use","config","token","JSON","parse","localStorage","getItem","error","Promise","reject","login","async","data","http","post","loginForm","register","registerForm","showSuccessSwal","title","timer","icon","includes","Swal","fire","position","showConfirmButton","loginAction","AuthService","dispatch","type","ERROR_ACTION","payload","resolve","user","id","username","email","roles","AUTH_LOGIN","accessToken","setItem","stringify","err","registerAction","AUTH_REGISTER","message","logOutAction","AUTH_LOGOUT","Login","useDispatch","history","useHistory","setLoginForm","useState","password","className","md","cilUser","placeholder","autoComplete","value","onChange","e","target","cilLockLocked","xs","color","onClick","event","preventDefault","res","push","signIn","style","width"],"mappings":"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","file":"static/js/8.fa193a35.chunk.js","sourcesContent":["export const AUTH_URL =\n  \"https://my-authentication-service-t.herokuapp.com/api/auth/\";\nexport const CLIENT_USER_URL =\n  \"https://my-client-service-t.herokuapp.com/api/users/\";\nexport const ACCOUNT_URL = \n\"https://my-account-service-tt.herokuapp.com/Account/\";\nexport const CARD_URL = \n\"https://my-card-service-ttt.herokuapp.com/Card/\";\nexport const SETTING_URL =\n  \"https://my-setting-service-t.herokuapp.com/Parameter/\";\nexport const TRANSFERT_CLIENT_URL =\n  \"https://transfer-client-service-t.herokuapp.com/transfer-client/\";\nexport const TRANSFERT_AGENT_URL =\n  \"https://my-transfert-agent-service.herokuapp.com/api/transfer-agent/\"; \n  export const AGENCY_URL = \n  \"https://my-agency-service-tt.herokuapp.com/Agency/\";\n ","import axios from \"axios\";\n\nconst baseURL = \"https://my-api-gateway-ttt.herokuapp.com/\"\nconst instance = axios.create({\n  baseURL,\n  headers: {\n    \"Content-type\": \"application/json\",\n  },\n});\n\ninstance.interceptors.request.use(\n  (config) => {\n    const token = JSON.parse(localStorage.getItem(\"token\"));\n    if (token) {\n      config.headers[\"Authorization\"] = \"Bearer \" + token;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\n\nexport default instance;\n","import { AUTH_URL } from \".\";\nimport http from \"../http-common\";\n\n class AuthService {\n  login = async (loginForm) => {\n    const { data, error } = await http.post(AUTH_URL + 'signin', loginForm);\n    return { data, error };\n  };\n  \n  \n  register = async (registerForm) => { \n    const { data, error } = await http.post(AUTH_URL+'signup' , registerForm);\n    return { data, error };\n  }\n\n\n}\n\nexport default new AuthService();\n","import Swal from 'sweetalert2';\n\nexport const showSuccessSwal = ({ title = 'Your work has been saved', timer = 1500 }) => {\n    const icon = title.includes(\"Error\") ? \"error\" : \"success\";\n    Swal.fire({\n      position: \"top-end\",\n      icon,\n      title,\n      timer,\n      showConfirmButton: false,\n    });\n\n}\n","import { AUTH_LOGIN, AUTH_LOGOUT, AUTH_REGISTER, ERROR_ACTION } from \"./types\";\nimport AuthService from \"../services/auth.service\";\nimport { showSuccessSwal } from \"../helpers/SweetAlert\";\n\nexport const loginAction = (loginForm) => async (dispatch) => {\n  try {\n    const { data, error } = await AuthService.login(loginForm);\n    if (error) {\n      dispatch({\n        type: ERROR_ACTION,\n        payload: data,\n      });\n      return Promise.resolve(error);\n    } else {\n      const user = {\n        id: data.id,\n        username: data.username,\n        email: data.email,\n        roles: data.roles,\n      }\n      dispatch({\n        type: AUTH_LOGIN,\n        payload: { user, token: data.accessToken },\n      }); \n      localStorage.setItem(\"user\", JSON.stringify(user));\n      localStorage.setItem(\"token\", JSON.stringify(data.accessToken));\n      showSuccessSwal({ title: `you're log in ` })\n      return Promise.resolve(data);\n    }\n  } catch (err) {\n    return Promise.reject(err);\n  }\n};\n\n\nexport const registerAction = (registerForm) => async (dispatch) => {\n  try {\n    const { data, error } = await AuthService.register(registerForm);\n    if (error) {\n      dispatch({\n        type: ERROR_ACTION,\n        payload: error,\n      });\n      return Promise.resolve(error);\n    } else {\n      dispatch({\n        type: AUTH_REGISTER,\n        payload: data,\n      });\n      showSuccessSwal({ title: data.message })\n\n      return Promise.resolve(data);\n    }\n  } catch (err) {\n    dispatch({\n      type: ERROR_ACTION,\n      payload: err.message,\n    });\n    return Promise.reject(err);\n  }\n}\n\n\nexport const logOutAction = () => (dispatch) => {\n\n  dispatch({ type: AUTH_LOGOUT, payload: {} })\n\n}","import React, { useState } from \"react\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport { cilLockLocked, cilUser } from \"@coreui/icons\";\nimport { useDispatch } from \"react-redux\";\nimport { loginAction } from \"../../../actions/authAction\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [loginForm, setLoginForm] = useState({\n    username: \"admin\",\n    password: \"password\",\n  });\n  const signIn = async (e) => {\n    e.preventDefault();\n    const res = await dispatch(loginAction(loginForm));\n    if (res && res.accessToken) {\n      history.push(\"/users\");\n    }\n  };\n\n  return (\n    <div className=\"bg-light min-vh-100 d-flex flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md={8}>\n            <CCardGroup>\n              <CCard className=\"p-4\">\n                <CCardBody>\n                  <CForm>\n                    <h1>Login</h1>\n                    <p className=\"text-medium-emphasis\">\n                      Sign In to your account\n                    </p>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupText>\n                        <CIcon icon={cilUser} />\n                      </CInputGroupText>\n                      <CFormInput\n                        placeholder=\"Username\"\n                        autoComplete=\"username\"\n                        value={loginForm.username}\n                        onChange={(e) =>\n                          setLoginForm({\n                            ...loginForm,\n                            username: e.target.value,\n                          })\n                        }\n                      />\n                    </CInputGroup>\n                    <CInputGroup className=\"mb-4\">\n                      <CInputGroupText>\n                        <CIcon icon={cilLockLocked} />\n                      </CInputGroupText>\n                      <CFormInput\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        autoComplete=\"current-password\"\n                        value={loginForm.password}\n                        onChange={(e) =>\n                          setLoginForm({\n                            ...loginForm,\n                            password: e.target.value,\n                          })\n                        }\n                      />\n                    </CInputGroup>\n                    <CRow>\n                      <CCol xs={6}>\n                        <CButton\n                          color=\"primary\"\n                          className=\"px-4\"\n                          onClick={(event) => signIn(event)}\n                        >\n                          Login\n                        </CButton>\n                      </CCol>\n                      <CCol xs={6} className=\"text-right\">\n                        <CButton color=\"link\" className=\"px-0\">\n                          Forgot password?\n                        </CButton>\n                      </CCol>\n                    </CRow>\n                  </CForm>\n                </CCardBody>\n              </CCard>\n              <CCard\n                className=\"text-white bg-primary py-5\"\n                style={{ width: \"44%\" }}\n              >\n                <CCardBody className=\"text-center\">\n                  <div>\n                    <h2>E-Banking</h2>\n                     \n                    <p>\n                      Thanks to the e-banking app, find all the functions of\n                      e-banking on your pc, smartphone or tablet. With the\n                      e-banking application, you have all the functions of\n                      e-banking, even when you are on the move.\n                    </p>\n                  </div>\n                </CCardBody>\n              </CCard>\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  );\n};\n\nexport default Login;\n"],"sourceRoot":""}
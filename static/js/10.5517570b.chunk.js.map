{"version":3,"sources":["helpers/BtnPlus.js","services/AccountService.js","helpers/DateTimeFormat.js","views/accounts/AccountsList.js"],"names":["BtnPlus","pathname","label","status","to","color","className","prototype","PropTypes","string","isRequired","defaultProps","baseURL","updateURL","getAccount","id","fetch","then","data","json","enabledAccount","requestOptions","method","headers","body","JSON","stringify","response","Swal","fire","disabledAccount","DateTimeFormat","date","Date","Intl","format","AccountsList","history","useHistory","dispatch","useDispatch","accountState","useSelector","state","list","setList","useState","details","setDetails","useEffect","getListAccountsAction","items","allAccounts","length","map","item","creationDate","columns","key","_style","width","filter","sorter","_props","itemsPerPage","columnFilter","columnSorter","pagination","clickableRows","tableProps","striped","hover","scopedColumns","Type","type","enabled","show_details","variant","shape","size","onClick","index","position","indexOf","newDetails","slice","splice","toggleDetails","includes","visible","push","title","showDenyButton","showCancelButton","confirmButtonText","denyButtonText","result","isConfirmed","isDenied"],"mappings":"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","file":"static/js/10.5517570b.chunk.js","sourcesContent":["import React from \"react\";\nimport { CButton } from \"@coreui/react\";\nimport PropTypes from \"prop-types\"; \nimport { Link } from \"react-router-dom\";\n\nfunction BtnPlus({ pathname, label, status }) {\n  return (\n    <>\n      {pathname && (\n        <Link to={pathname}>\n          <CButton color={status}>\n            <i className=\"fa fa-plus mx-1\"></i>\n            {label}\n          </CButton>\n        </Link>\n      )}\n    </>\n  );\n}\n\nBtnPlus.prototype = {\n  pathname: PropTypes.string.isRequired,\n  label: PropTypes.string,\n};\n\nBtnPlus.defaultProps = {\n    status: \"primary\",\n}\n\nexport default BtnPlus;\n","import Swal from \"sweetalert2\";\n \nexport const baseURL =\n  \"https://my-account-service-tt.herokuapp.com/Account/create\";\n\nexport const updateURL =\n  \"https://my-account-service-tt.herokuapp.com/Account/update\";\n\nexport function getAccount(id) {\n  return fetch(\n    \"https://my-account-service-tt.herokuapp.com/Account/get?id=\" + id\n  ).then((data) => data.json());\n}\nexport function enabledAccount(id) {\n  const requestOptions = {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ id: id }),\n  };\n  fetch(\n    \"https://my-account-service-tt.herokuapp.com/Account/enable\",\n    requestOptions\n  ).then((response) => response.json());\n\n  Swal.fire(\"Enabled!\", \"\", \"success\");\n}\n\nexport function disabledAccount(id) {\n  const requestOptions = {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ id: id }),\n  };\n  fetch(\n    \"https://my-account-service-tt.herokuapp.com/Account/disable\",\n    requestOptions\n  ).then((response) => response.json());\n\n  Swal.fire(\"Disabled!\", \"\", \"success\");\n}\n","export const DateTimeFormat = (date) => {\n  if (typeof date === \"string\") {\n    date = new Date(date);\n  }\n\n  let dateFormatted = new Intl.DateTimeFormat(\"en-US\").format(date);\n  return dateFormatted;\n};\n","import React, { useEffect, useState } from \"react\";\nimport { CSmartTable } from \"@coreui/react-pro\";\nimport { enabledAccount, disabledAccount } from \"../../services/AccountService\";\nimport { CCollapse, CButton, CCardBody } from \"@coreui/react\";\nimport { useHistory } from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\nimport BtnPlus from \"src/helpers/BtnPlus\";\nimport { DateTimeFormat } from \"src/helpers/DateTimeFormat\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getListAccountsAction } from \"src/actions/accountAction\";\n\nconst AccountsList = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const accountState = useSelector((state) => state[\"accountReducer\"]);\n  const [list, setList] = useState([]);\n  const [details, setDetails] = useState([]);\n\n  useEffect(() => {\n    dispatch(getListAccountsAction());\n  }, []);\n\n  useEffect(() => {\n    let items = [];\n    if (accountState.allAccounts.length > 0) {\n      items = accountState.allAccounts.map((item) => {\n        item.creationDate = DateTimeFormat(item.creationDate);\n        return item;\n      });\n    }\n    setList(items);\n  }, [accountState.allAccounts]);\n\n  const columns = [\n    { key: \"accountNumber\" },\n    { key: \"balance\" },\n    { key: \"Type\" },\n    { key: \"currency\", _style: { width: \"40%\" } },\n    { key: \"enabled\", _style: { width: \"20%\" } },\n    { key: \"creationDate\", _style: { width: \"20%\" } },\n    {\n      key: \"show_details\",\n      label: \"\",\n      _style: { width: \"1%\" },\n      filter: false,\n      sorter: false,\n      _props: { color: \"\", className: \"fw-semibold\" },\n    },\n  ];\n\n  const toggleDetails = (index) => {\n    const position = details.indexOf(index);\n    let newDetails = details.slice();\n    if (position !== -1) {\n      newDetails.splice(position, 1);\n    } else {\n      newDetails = [...details, index];\n    }\n    setDetails(newDetails);\n  };\n\n  const enableAccount = (index) => {\n    Swal.fire({\n      title: \"Do you want to enable this account?\",\n      showDenyButton: true,\n      showCancelButton: true,\n      confirmButtonText: \"Enable\",\n      denyButtonText: `Don't`,\n    }).then((result) => {\n      if (result.isConfirmed) {\n        enabledAccount(index);\n      } else if (result.isDenied) {\n        Swal.fire(\"This account is disabled\", \"\", \"info\");\n      }\n    });\n  };\n\n  const disableAccount = (index) => {\n    Swal.fire({\n      title: \"Do you want to disable this account?\",\n      showDenyButton: true,\n      showCancelButton: true,\n      confirmButtonText: \"Disable\",\n      denyButtonText: `Don't`,\n    }).then((result) => {\n      if (result.isConfirmed) {\n        disabledAccount(index);\n      } else if (result.isDenied) {\n        Swal.fire(\"This account is enabled\", \"\", \"info\");\n      }\n    });\n  };\n\n  const deleteAccount = (index) => {\n    Swal.fire({\n      title: \"Do you want to delete this account?\",\n      showCancelButton: true,\n      confirmButtonText: \"Delete\",\n    }).then((result) => {});\n  };\n\n  return (\n    <>\n      <div className=\"py-0 d-flex justify-content-between align-items-center \">\n        <h4>Accounts List</h4>\n        <BtnPlus pathname=\"/account\" label=\"New Account\" />\n      </div>\n      <hr />\n      <CSmartTable\n        items={list}\n        columns={columns}\n        itemsPerPage={7}\n        columnFilter\n        columnSorter\n        pagination\n        clickableRows\n        tableProps={{\n          striped: true,\n          hover: true,\n        }}\n        scopedColumns={{\n          Type: (item) => <td>{item.type}</td>,\n          enabled: (item) => <td>{item.enabled ? \"Active\" : \"Not Active\"}</td>,\n          show_details: (item) => (\n            <td className=\"py-2\">\n              <CButton\n                color=\"primary\"\n                variant=\"outline\"\n                shape=\"square\"\n                size=\"sm\"\n                onClick={() => {\n                  toggleDetails(item.id);\n                }}\n              >\n                {details.includes(item.id) ? \"Hide\" : \"Action\"}\n              </CButton>\n            </td>\n          ),\n          details: (item) => (\n            <CCollapse visible={details.includes(item.id)}>\n              <CCardBody>\n                <p className=\"text-muted\">\n                  Creation Date :{DateTimeFormat(item.creationDate)}\n                </p>\n                <CButton\n                  size=\"sm\"\n                  color=\"info\"\n                  onClick={() => {\n                    history.push({\n                      pathname: \"/editAccount\",\n                      id: item.id,\n                    });\n                  }}\n                >\n                  Update\n                </CButton>\n\n                <CButton\n                  size=\"sm\"\n                  color=\"success\"\n                  className=\"ml-1\"\n                  onClick={() => {\n                    enableAccount(item.id);\n                  }}\n                >\n                  Activate\n                </CButton>\n\n                <CButton\n                  size=\"sm\"\n                  color=\"warning\"\n                  onClick={() => {\n                    disableAccount(item.id);\n                  }}\n                >\n                  Desactivate\n                </CButton>\n\n                <CButton\n                  size=\"sm\"\n                  color=\"danger\"\n                  className=\"ml-1\"\n                  onClick={() => {\n                    deleteAccount(item.id);\n                  }}\n                >\n                  Delete\n                </CButton>\n              </CCardBody>\n            </CCollapse>\n          ),\n        }}\n      />\n    </>\n  );\n};\n\nexport default AccountsList;\n"],"sourceRoot":""}
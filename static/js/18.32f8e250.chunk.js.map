{"version":3,"sources":["views/agencies/AgencyForm.js"],"names":["AgencyForm","history","useHistory","dispatch","useDispatch","name","useRef","location","city","idAgent","clientState","useSelector","state","list","setList","useState","useEffect","users","className","map","item","ref","value","id","username","type","placeholder","onClick","async","data","current","createAgencyAction","Swal","fire","title","text","icon","confirmButtonText","push","pathname","err","message","createAgency"],"mappings":"+GAAA,sEA4GeA,UAtGf,WACE,MAAMC,EAAUC,cACVC,EAAWC,cAEXC,EAAOC,iBAAO,MACdC,EAAWD,iBAAO,MAClBE,EAAOF,iBAAO,MACdG,EAAUH,iBAAO,MAEjBI,EAAcC,aAAYC,GAAQA,EAAK,eACtCC,EAAMC,GAAWC,mBAAS,IAoCjC,OAnCAC,qBAAU,KACRF,EAAQ,IAAIJ,EAAYO,UACvB,CAACP,EAAYO,QAkCd,sBAAKC,UAAU,OAAf,UACE,sBAAKA,UAAU,0BAAf,UACE,mBAAGA,UAAU,oBADf,oBAIA,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,aAAf,UACE,oDACA,wBAAQA,UAAU,eAAlB,SACGL,EAAKM,KAAKC,GACT,wBAAQC,IAAKZ,EAASa,MAAOF,EAAKG,GAAlC,SACGH,EAAKI,UADmCJ,EAAKG,WAMtD,uBACA,qBAAKL,UAAU,aAAf,SACE,uBACEO,KAAK,OACLP,UAAU,eACVG,IAAKhB,EACLqB,YAAY,WAGhB,uBACA,qBAAKR,UAAU,aAAf,SACE,uBACEO,KAAK,OACLP,UAAU,eACVG,IAAKd,EACLmB,YAAY,gBAGhB,uBACA,qBAAKR,UAAU,aAAf,SACE,uBACEO,KAAK,OACLP,UAAU,eACVG,IAAKb,EACLkB,YAAY,YAGhB,uBACA,wBACER,UAAU,yBACVS,QAAS,IA9EIC,WACnB,MAAMC,EAAO,CACXxB,KAAMA,EAAKyB,QAAQR,MACnBf,SAAUA,EAASuB,QAAQR,MAC3Bd,KAAMA,EAAKsB,QAAQR,MACnBb,QAASA,EAAQqB,QAAQR,OAG3B,WACoBnB,EAAS4B,YAAmBF,KACvC,KACLG,IAAKC,KAAK,CACRC,MAAO,SACPC,KAAM,6BACNC,KAAM,UACNC,kBAAmB,OAErBpC,EAAQqC,KAAK,CACXC,SAAU,eAGd,MAAOC,GACPR,IAAKC,KAAK,CACRC,MAAO,aACPC,KAAM,8BAAgCK,EAAIC,QAC1CL,KAAM,OACNC,kBAAmB,SAoDFK,GAFjB","file":"static/js/18.32f8e250.chunk.js","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\n import Swal from \"sweetalert2\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createAgencyAction } from \"src/actions/agencyAction\";\n\nfunction AgencyForm() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const name = useRef(null);\n  const location = useRef(null);\n  const city = useRef(null);\n  const idAgent = useRef(null);\n\n  const clientState = useSelector(state=> state['userReducer'] )\n  const [list, setList] = useState([]);\n  useEffect(() => {\n    setList([...clientState.users]);\n  }, [clientState.users]);\n\n  const createAgency = async () => {\n    const data = {\n      name: name.current.value,\n      location: location.current.value,\n      city: city.current.value,\n      idAgent: idAgent.current.value,\n    };\n\n    try {\n      const res = await dispatch(createAgencyAction(data));\n      if (res[\"id\"]) {\n        Swal.fire({\n          title: \"Saved!\",\n          text: \"New account has been added\",\n          icon: \"success\",\n          confirmButtonText: \"Ok\",\n        });\n        history.push({\n          pathname: \"/agencies\",\n        });\n      }\n    } catch (err) {\n      Swal.fire({\n        title: \"Try again!\",\n        text: \"Account has not been saved:\" + err.message,\n        icon: \"info\",\n        confirmButtonText: \"Ok\",\n      });\n    }\n  };\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-header text-center\">\n        <i className=\"fa fa-plus mx-1\"></i>\n        Add New Agency\n      </div>\n      <div className=\"card-body\">\n        <div className=\"form-group\">\n          <label>Select Agent : </label>\n          <select className=\"form-control\">\n            {list.map((item) => (\n              <option ref={idAgent} value={item.id} key={item.id}>\n                {item.username}\n              </option>\n            ))}\n          </select>\n        </div>\n        <br></br>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            ref={name}\n            placeholder=\"Name\"\n          />\n        </div>\n        <br></br>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            ref={location}\n            placeholder=\"Location \"\n          />\n        </div>\n        <br></br>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            ref={city}\n            placeholder=\"City \"\n          />\n        </div>\n        <br></br>\n        <button\n          className=\"btn btn-sm btn-primary\"\n          onClick={() => createAgency()}\n        >\n          Add Agency\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default AgencyForm;\n"],"sourceRoot":""}
{"version":3,"sources":["views/settings/Settings.js","services/SettingsService.js"],"names":["Setting","maxAmountForCashToCash","useRef","maxAmountForCashToAccount","maxAmountForAccountToCash","maxAmountForAccountToAccount","maxHoldingTimeForCashToCash","maxHoldingTimeForCashToAccount","maxHoldingTimeForAccountToCash","maxHoldingTimeForAccountToAccount","transferPercentageForCashToCash","transferPercentageForCashToAccount","transferPercentageForAccountToAccount","transferPercentageForAccountToCash","list","setList","useState","useEffect","async","http","get","SETTING_URL","getParameter","then","items","console","log","data","className","icon","cilSettings","type","defaultValue","ref","placeholder","onClick","settingData","id","current","value","res","fetch","method","headers","body","JSON","stringify","ok","message","status","statusText","Error","Swal","fire","title","text","confirmButtonText","err","updateSettings"],"mappings":"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","file":"static/js/22.6740dbee.chunk.js","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport { getParameter } from \"../../services/SettingsService\";\nimport CIcon from \"@coreui/icons-react\";\nimport { cilSettings } from \"@coreui/icons\";\nimport { CCol, CRow } from \"@coreui/react\";\nimport Swal from \"sweetalert2\";\n\nfunction Setting() {\n  const baseURL =\n    \"https://my-setting-service-t.herokuapp.com/Parameter/update\";\n\n  const maxAmountForCashToCash = useRef(null);\n  const maxAmountForCashToAccount = useRef(null);\n  const maxAmountForAccountToCash = useRef(null);\n  const maxAmountForAccountToAccount = useRef(null);\n  const maxHoldingTimeForCashToCash = useRef(null);\n  const maxHoldingTimeForCashToAccount = useRef(null);\n  const maxHoldingTimeForAccountToCash = useRef(null);\n  const maxHoldingTimeForAccountToAccount = useRef(null);\n  const transferPercentageForCashToCash = useRef(null);\n  const transferPercentageForCashToAccount = useRef(null);\n  const transferPercentageForAccountToAccount = useRef(null);\n  const transferPercentageForAccountToCash = useRef(null);\n\n  const [list, setList] = useState([]);\n\n  useEffect(() => {\n    getParameter().then((items) =>{ \n      console.log(items.data);\n      setList(items.data);});\n  }, []);\n\n  async function updateSettings() {\n    try {\n      const settingData = {\n        id: list.id,\n        maxAmountForCashToCash: maxAmountForCashToCash.current.value,\n        maxAmountForCashToAccount: maxAmountForCashToAccount.current.value,\n        maxAmountForAccountToCash: maxAmountForAccountToCash.current.value,\n        maxAmountForAccountToAccount:\n          maxAmountForAccountToAccount.current.value,\n        maxHoldingTimeForCashToCash: maxAmountForCashToCash.current.value,\n        maxHoldingTimeForCashToAccount: maxAmountForCashToCash.current.value,\n        maxHoldingTimeForAccountToCash: maxAmountForCashToCash.current.value,\n        maxHoldingTimeForAccountToAccount: maxAmountForCashToCash.current.value,\n        transferPercentageForCashToCash: maxAmountForCashToCash.current.value,\n        transferPercentageForCashToAccount:\n          maxAmountForCashToCash.current.value,\n        transferPercentageForAccountToAccount:\n          maxAmountForCashToCash.current.value,\n        transferPercentageForAccountToCash:\n          maxAmountForCashToCash.current.value,\n      };\n      const res = await fetch(baseURL, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(settingData),\n      });\n\n      if (!res.ok) {\n        const message = `An error has occured: ${res.status} - ${res.statusText}`;\n        throw new Error(message);\n      }\n\n      Swal.fire({\n        title: \"Updated!\",\n        text: \"Settings have been changed!\",\n        icon: \"success\",\n        confirmButtonText: \"Ok\",\n      });\n    } catch (err) {\n      Swal.fire({\n        title: \"Try again!\",\n        text: \"Settings are not changed:\" + err.message,\n        icon: \"info\",\n        confirmButtonText: \"Ok\",\n      });\n    }\n  }\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-header\">\n        <CIcon icon={cilSettings} /> Settings\n      </div>\n      <div className=\"card-body\">\n        <b>Max Amount :</b>\n        <CRow>\n          <CCol>\n            <div className=\"form-group\">\n              <label>Cash To Cash :</label>\n              <input\n                type=\"text\"\n                defaultValue={list.maxAmountForCashToCash || \"\"}\n                className=\"form-control\"\n                ref={maxAmountForCashToCash}\n                placeholder=\"maxAmountForCashToCash\"\n              />\n            </div>\n          </CCol>\n          <CCol>\n            <div className=\"form-group\">\n              <label>Cash To Account :</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                defaultValue={list.maxAmountForCashToAccount || \"\"}\n                ref={maxAmountForCashToAccount}\n                placeholder=\"maxAmountForCashToAccount \"\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol>\n            <div className=\"form-group\">\n              <label>Account To Cash :</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                defaultValue={list.maxAmountForAccountToCash || \"\"}\n                ref={maxAmountForAccountToCash}\n                placeholder=\"maxAmountForAccountToCash \"\n              />\n            </div>\n          </CCol>\n          <CCol>\n            <div className=\"form-group\">\n              <label> Account To Account :</label>\n              <input\n                type=\"test\"\n                className=\"form-control\"\n                defaultValue={list.maxAmountForAccountToAccount || \"\"}\n                ref={maxAmountForAccountToAccount}\n                placeholder=\"maxAmountForAccountToAccount \"\n              />\n            </div>\n          </CCol>\n        </CRow>\n\n        <hr></hr>\n        <b>Max Holding Time :</b>\n        <CRow>\n          <CCol>\n            <div className=\"form-group\">\n              <label>Cash To Cash :</label>\n              <input\n                type=\"text\"\n                defaultValue={list.maxHoldingTimeForCashToCash || \"\"}\n                className=\"form-control\"\n                ref={maxHoldingTimeForCashToCash}\n                placeholder=\"maxHoldingTimeForCashToCash\"\n              />\n            </div>\n          </CCol>\n          <CCol>\n            <div className=\"form-group\">\n              <label>Cash To Account :</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                defaultValue={list.maxHoldingTimeForCashToAccount || \"\"}\n                ref={maxHoldingTimeForCashToAccount}\n                placeholder=\"maxHoldingTimeForCashToAccount \"\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol>\n            <div className=\"form-group\">\n              <label>Account To Cash :</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                defaultValue={list.maxHoldingTimeForAccountToCash || \"\"}\n                ref={maxHoldingTimeForAccountToCash}\n                placeholder=\"maxHoldingTimeForAccountToCash \"\n              />\n            </div>\n          </CCol>\n          <CCol>\n            <div className=\"form-group\">\n              <label> Account To Account :</label>\n              <input\n                type=\"test\"\n                className=\"form-control\"\n                defaultValue={list.maxHoldingTimeForAccountToAccount || \"\"}\n                ref={maxHoldingTimeForAccountToAccount}\n                placeholder=\"maxHoldingTimeForAccountToAccount \"\n              />\n            </div>\n          </CCol>\n        </CRow>\n\n        <hr></hr>\n        <b>Transfer Percentage :</b>\n        <CRow>\n          <CCol>\n            <div className=\"form-group\">\n              <label>Cash To Cash :</label>\n              <input\n                type=\"text\"\n                defaultValue={list.transferPercentageForCashToCash || \"\"}\n                className=\"form-control\"\n                ref={transferPercentageForCashToCash}\n              />\n            </div>\n          </CCol>\n          <CCol>\n            <div className=\"form-group\">\n              <label>Cash To Account :</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                defaultValue={list.transferPercentageForCashToAccount || \"\"}\n                ref={transferPercentageForCashToAccount}\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol>\n            <div className=\"form-group\">\n              <label>Account To Cash :</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                defaultValue={list.transferPercentageForAccountToCash || \"\"}\n                ref={transferPercentageForAccountToCash}\n              />\n            </div>\n          </CCol>\n          <CCol>\n            <div className=\"form-group\">\n              <label> Account To Account :</label>\n              <input\n                type=\"test\"\n                className=\"form-control\"\n                defaultValue={list.transferPercentageForAccountToAccount || \"\"}\n                ref={transferPercentageForAccountToAccount}\n              />\n            </div>\n          </CCol>\n        </CRow>\n\n        <br></br>\n        <div className=\"form-group\">\n          <button\n            className=\"btn btn-secondary btn-lg btn-block\"\n            onClick={() => updateSettings()}\n          >\n            Update Settings\n          </button>\n        </div>\n        <br></br>\n      </div>\n    </div>\n  );\n}\n\nexport default Setting;\n","import http from \"../http-common\";\nimport { SETTING_URL } from \"./index\";\n\nexport const getParameter = async () => {\n  return await http.get(SETTING_URL + \"get\");\n};\n"],"sourceRoot":""}